/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sZQMbqXz9utLNaTnNb3uss
// Component: -3JBPQCG-aXv

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";

import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import Button from "../../Button"; // plasmic-import: _5H7Xe2DiXqI/component
import { Input } from "@/fragment/components/input"; // plasmic-import: UGm7T3K14yEW/codeComponent
import { AntdSelect } from "@plasmicpkgs/antd5/skinny/registerSelect";
import { Timer } from "@plasmicpkgs/plasmic-basic-components";
import { AntdCheckbox } from "@plasmicpkgs/antd5/skinny/registerCheckbox";
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import { SideEffect } from "@plasmicpkgs/plasmic-basic-components";
import { AntdModal } from "@plasmicpkgs/antd5/skinny/registerModal";
import Shop from "../../Shop"; // plasmic-import: zOsuRTq3iEqd/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import {
  ExperimentValue,
  useExperiment
} from "./PlasmicGlobalVariant__Experiment"; // plasmic-import: 0yNpRAZ9BHRO/globalVariant
import {
  UnnamedGlobalGroupOfVariantsValue,
  useUnnamedGlobalGroupOfVariants
} from "./PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants"; // plasmic-import: 0yrtEc_Se3kZ/globalVariant
import {
  UnnamedGlobalGroupOfVariants2Value,
  useUnnamedGlobalGroupOfVariants2
} from "./PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants2"; // plasmic-import: N3RmGzhPpcNq/globalVariant
import { useScreenVariants as useScreenVariantsosEvNkdp6Zt6 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: OSEvNkdp6ZT6/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: sZQMbqXz9utLNaTnNb3uss/projectcss
import sty from "./PlasmicLogIn.module.css"; // plasmic-import: -3JBPQCG-aXv/css

import Icon154Icon from "./icons/PlasmicIcon__Icon154"; // plasmic-import: vEkGA7arj2Yg/icon
import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: GsFYrYWA9bY1/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: DuoBqJ29N7bW/icon
import Icon55Icon from "./icons/PlasmicIcon__Icon55"; // plasmic-import: pYVCSSEZE7RE/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: dXgXrJG5lp3Z/icon
import Icon37Icon from "./icons/PlasmicIcon__Icon37"; // plasmic-import: T5qnRYhm3_iD/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: jg6gpiNRWEQd/icon
import LeftArrowBackSvgrepoComSvgIcon from "./icons/PlasmicIcon__LeftArrowBackSvgrepoComSvg"; // plasmic-import: LNmML4UO8Edb/icon
import Icon82Icon from "./icons/PlasmicIcon__Icon82"; // plasmic-import: 9IvX4CneDX4f/icon

createPlasmicElementProxy;

export type PlasmicLogIn__VariantMembers = {
  code2: "code2";
  saraf2: "saraf2";
  password: "password";
  loginByPassword: "loginByPassword";
  group11: "code" | "saraf" | "password" | "loginByPassword" | "noSaraf";
};
export type PlasmicLogIn__VariantsArgs = {
  code2?: SingleBooleanChoiceArg<"code2">;
  saraf2?: SingleBooleanChoiceArg<"saraf2">;
  password?: SingleBooleanChoiceArg<"password">;
  loginByPassword?: SingleBooleanChoiceArg<"loginByPassword">;
  group11?: SingleChoiceArg<
    "code" | "saraf" | "password" | "loginByPassword" | "noSaraf"
  >;
};
type VariantPropType = keyof PlasmicLogIn__VariantsArgs;
export const PlasmicLogIn__VariantProps = new Array<VariantPropType>(
  "code2",
  "saraf2",
  "password",
  "loginByPassword",
  "group11"
);

export type PlasmicLogIn__ArgsType = { disabled?: boolean };
type ArgPropType = keyof PlasmicLogIn__ArgsType;
export const PlasmicLogIn__ArgProps = new Array<ArgPropType>("disabled");

export type PlasmicLogIn__OverridesType = {
  root?: Flex__<"div">;
  reveal?: Flex__<typeof Reveal>;
  button?: Flex__<typeof Button>;
  fragmentInput?: Flex__<typeof Input>;
  select2?: Flex__<typeof AntdSelect>;
  fragmentInput3?: Flex__<typeof Input>;
  fragmentInput2?: Flex__<typeof Input>;
  timer?: Flex__<typeof Timer>;
  select?: Flex__<typeof AntdSelect>;
  btnNumber?: Flex__<typeof Button>;
  button2?: Flex__<typeof Button>;
  button3?: Flex__<typeof Button>;
  checkbox?: Flex__<typeof AntdCheckbox>;
  btnSaraf?: Flex__<typeof Button>;
  sendcode?: Flex__<typeof Button>;
  figmaPaste?: Flex__<"div">;
  group?: Flex__<"div">;
  group2?: Flex__<"div">;
  rectangle35?: Flex__<"div">;
  group3?: Flex__<"div">;
  group4?: Flex__<"div">;
  rectangle23?: Flex__<"div">;
  group5?: Flex__<"div">;
  rectangle24?: Flex__<"div">;
  group6?: Flex__<"div">;
  rectangle25?: Flex__<"div">;
  group7?: Flex__<"div">;
  rectangle?: Flex__<"div">;
  group8?: Flex__<"div">;
  group9?: Flex__<"div">;
  group10?: Flex__<"div">;
  embedHtml?: Flex__<typeof Embed>;
  sideEffect?: Flex__<typeof SideEffect>;
  modal?: Flex__<typeof AntdModal>;
  shop?: Flex__<typeof Shop>;
};

export interface DefaultLogInProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLogIn__RenderFunc(props: {
  variants: PlasmicLogIn__VariantsArgs;
  args: PlasmicLogIn__ArgsType;
  overrides: PlasmicLogIn__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "fragmentInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "number",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "error",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "code2",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.code2
      },
      {
        path: "fragmentInput2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "time",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return 60;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return 60;
              }
              throw e;
            }
          })()
      },
      {
        path: "loadedbtn",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "code",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "saraf",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          { label: "sjsjd1n", value: 101 },
          { label: "sjs2jdn", value: 102 },
          { label: "sjsj3dn", value: 103 },
          { label: "sjs4jdn", value: 104 }
        ]
      },
      {
        path: "saraf2",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.saraf2
      },
      {
        path: "select.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          hasVariant($state, "group11", "saraf") &&
          hasVariant(globalVariants, "screen", "mobileOnly")
            ? (() => {
                try {
                  return $state.saraf[0].value;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return 100;
                  }
                  throw e;
                }
              })()
            : hasVariant($state, "saraf2", "saraf2") &&
              hasVariant(globalVariants, "screen", "mobileOnly")
            ? (() => {
                try {
                  return $state.saraf[0].value;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return 100;
                  }
                  throw e;
                }
              })()
            : hasVariant(globalVariants, "screen", "mobileOnly")
            ? (() => {
                try {
                  return $state.saraf[0].value;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return 100;
                  }
                  throw e;
                }
              })()
            : (() => {
                try {
                  return $state.saraf[0].value;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return 100;
                  }
                  throw e;
                }
              })()
      },
      {
        path: "selectsaraf",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "password",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.password
      },
      {
        path: "pass",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "loginByPassword",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.loginByPassword
      },
      {
        path: "fragmentInput3.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "pass1",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "password"
      },
      {
        path: "contry",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            value: "+98",
            label: "\ud83c\uddee\ud83c\uddf7 +98",
            description: "Iran",
            phoneFormats: {
              type: "Mobile",
              regex: "^9\\d{9}$",
              example: "9123456789"
            }
          },
          {
            value: "+93",
            label: "\ud83c\udde6\ud83c\uddeb +93",
            description: "Afghanistan",
            phoneFormats: {
              type: "Mobile",
              regex: "^7\\d{8}$",
              example: "70123456"
            }
          },
          {
            value: "+90",
            label: "\ud83c\uddf9\ud83c\uddf7 +90",
            description: "Turkey",
            phoneFormats: {
              type: "Mobile",
              regex: "^5\\d{9}$",
              example: "5012345678"
            }
          }
        ]
      },
      {
        path: "select2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "+98"
      },
      {
        path: "selectContry",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.select2.value;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "button.loadingviow",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.loadingviow;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "btnNumber.loadingviow",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.loadingviow;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "button2.loadingviow",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.loadingviow;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "button3.loadingviow",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.loadingviow;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "btnSaraf.loadingviow",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.loadingviow;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "sendcode.loadingviow",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.loadingviow;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "group11",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.group11
      },
      {
        path: "modal.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "checkbox.checked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          hasVariant($state, "group11", "saraf")
            ? false
            : hasVariant($state, "saraf2", "saraf2")
            ? true
            : undefined
      },
      {
        path: "shop.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          hasVariant($state, "group11", "saraf") ? false : false
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    experiment: useExperiment(),
    unnamedGlobalGroupOfVariants: useUnnamedGlobalGroupOfVariants(),
    unnamedGlobalGroupOfVariants2: useUnnamedGlobalGroupOfVariants2(),
    screen: useScreenVariantsosEvNkdp6Zt6()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicLogIn.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicLogIn.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicLogIn.pageMetadata.title}
        />

        <meta
          key="og:image"
          property="og:image"
          content={PlasmicLogIn.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicLogIn.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          plasmic_plasmic_rich_components_css.plasmic_tokens,
          sty.root,
          {
            [sty.rootcode2]: hasVariant($state, "code2", "code2"),
            [sty.rootcode2_group11_code]:
              hasVariant($state, "group11", "code") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootcode2_group11_loginByPassword]:
              hasVariant($state, "code2", "code2") &&
              hasVariant($state, "group11", "loginByPassword"),
            [sty.rootcode2_group11_password]:
              hasVariant($state, "group11", "password") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootcode2_group11_saraf]:
              hasVariant($state, "group11", "saraf") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootcode2_saraf2]:
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootcode2_saraf2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootcode2_saraf2_group11_password]:
              hasVariant($state, "code2", "code2") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "group11", "password"),
            [sty.rootglobal_experiment_override]: hasVariant(
              globalVariants,
              "experiment",
              "override"
            ),
            [sty.rootglobal_unnamedGlobalGroupOfVariants2_unnamedVariant_global_unnamedGlobalGroupOfVariants_unnamedVariant]:
              hasVariant(
                globalVariants,
                "unnamedGlobalGroupOfVariants",
                "unnamedVariant"
              ) &&
              hasVariant(
                globalVariants,
                "unnamedGlobalGroupOfVariants2",
                "unnamedVariant"
              ),
            [sty.rootglobal_unnamedGlobalGroupOfVariants_unnamedVariant]:
              hasVariant(
                globalVariants,
                "unnamedGlobalGroupOfVariants",
                "unnamedVariant"
              ),
            [sty.rootgroup11_code]: hasVariant($state, "group11", "code"),
            [sty.rootgroup11_loginByPassword]: hasVariant(
              $state,
              "group11",
              "loginByPassword"
            ),
            [sty.rootgroup11_noSaraf]: hasVariant($state, "group11", "noSaraf"),
            [sty.rootgroup11_password]: hasVariant(
              $state,
              "group11",
              "password"
            ),
            [sty.rootgroup11_saraf]: hasVariant($state, "group11", "saraf"),
            [sty.rootloginByPassword]: hasVariant(
              $state,
              "loginByPassword",
              "loginByPassword"
            ),
            [sty.rootloginByPassword_code2]:
              hasVariant($state, "code2", "code2") &&
              hasVariant($state, "loginByPassword", "loginByPassword"),
            [sty.rootloginByPassword_code2_group11_password]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "group11", "password") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootloginByPassword_code2_group11_saraf]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "group11", "saraf") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootloginByPassword_code2_saraf2]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootloginByPassword_code2_saraf2_group11_password]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "group11", "password") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootloginByPassword_group11_code]:
              hasVariant($state, "group11", "code") &&
              hasVariant($state, "loginByPassword", "loginByPassword"),
            [sty.rootloginByPassword_group11_password]:
              hasVariant($state, "group11", "password") &&
              hasVariant($state, "loginByPassword", "loginByPassword"),
            [sty.rootloginByPassword_group11_saraf]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "group11", "saraf"),
            [sty.rootloginByPassword_password]:
              hasVariant($state, "password", "password") &&
              hasVariant($state, "loginByPassword", "loginByPassword"),
            [sty.rootloginByPassword_password_code2_group11_saraf]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "group11", "saraf") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootloginByPassword_password_code2_saraf2]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootloginByPassword_password_group11_saraf]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "group11", "saraf") &&
              hasVariant($state, "password", "password"),
            [sty.rootloginByPassword_password_saraf2]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "password", "password"),
            [sty.rootloginByPassword_password_saraf2_group11_code]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "group11", "code"),
            [sty.rootloginByPassword_saraf2]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "saraf2", "saraf2"),
            [sty.rootloginByPassword_saraf2_group11_code]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "group11", "code"),
            [sty.rootloginByPassword_saraf2_group11_password]:
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "group11", "password"),
            [sty.rootpassword]: hasVariant($state, "password", "password"),
            [sty.rootpassword_code2]:
              hasVariant($state, "password", "password") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootpassword_code2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootpassword_code2_group11_saraf]:
              hasVariant($state, "code2", "code2") &&
              hasVariant($state, "group11", "saraf") &&
              hasVariant($state, "password", "password"),
            [sty.rootpassword_code2_saraf2]:
              hasVariant($state, "code2", "code2") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "password", "password"),
            [sty.rootpassword_code2_saraf2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "code2", "code2"),
            [sty.rootpassword_group11_code]:
              hasVariant($state, "password", "password") &&
              hasVariant($state, "group11", "code"),
            [sty.rootpassword_group11_loginByPassword]:
              hasVariant($state, "password", "password") &&
              hasVariant($state, "group11", "loginByPassword"),
            [sty.rootpassword_group11_password]:
              hasVariant($state, "password", "password") &&
              hasVariant($state, "group11", "password"),
            [sty.rootpassword_group11_saraf]:
              hasVariant($state, "password", "password") &&
              hasVariant($state, "group11", "saraf"),
            [sty.rootpassword_saraf2]:
              hasVariant($state, "password", "password") &&
              hasVariant($state, "saraf2", "saraf2"),
            [sty.rootpassword_saraf2_group11_code]:
              hasVariant($state, "group11", "code") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "password", "password"),
            [sty.rootpassword_saraf2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "password", "password"),
            [sty.rootsaraf2]: hasVariant($state, "saraf2", "saraf2"),
            [sty.rootsaraf2_group11_code]:
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "group11", "code"),
            [sty.rootsaraf2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "saraf2", "saraf2"),
            [sty.rootsaraf2_group11_password]:
              hasVariant($state, "group11", "password") &&
              hasVariant($state, "saraf2", "saraf2"),
            [sty.rootsaraf2_group11_saraf]:
              hasVariant($state, "group11", "saraf") &&
              hasVariant($state, "saraf2", "saraf2")
          }
        )}
      >
        <Reveal
          data-plasmic-name={"reveal"}
          data-plasmic-override={overrides.reveal}
          cascade={
            hasVariant($state, "group11", "code")
              ? false
              : hasVariant($state, "code2", "code2")
              ? false
              : undefined
          }
          className={classNames("__wab_instance", sty.reveal, {
            [sty.revealcode2]: hasVariant($state, "code2", "code2"),
            [sty.revealcode2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "code2", "code2"),
            [sty.revealcode2_saraf2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "code2", "code2"),
            [sty.revealgroup11_code]: hasVariant($state, "group11", "code"),
            [sty.revealgroup11_loginByPassword]: hasVariant(
              $state,
              "group11",
              "loginByPassword"
            ),
            [sty.revealgroup11_noSaraf]: hasVariant(
              $state,
              "group11",
              "noSaraf"
            ),
            [sty.revealgroup11_password]: hasVariant(
              $state,
              "group11",
              "password"
            ),
            [sty.revealgroup11_saraf]: hasVariant($state, "group11", "saraf"),
            [sty.revealloginByPassword]: hasVariant(
              $state,
              "loginByPassword",
              "loginByPassword"
            ),
            [sty.revealloginByPassword_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "loginByPassword", "loginByPassword"),
            [sty.revealloginByPassword_password_code2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "code2", "code2"),
            [sty.revealloginByPassword_password_code2_saraf2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "code2", "code2"),
            [sty.revealloginByPassword_password_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "password", "password"),
            [sty.revealloginByPassword_password_saraf2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "loginByPassword", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "saraf2", "saraf2"),
            [sty.revealpassword]: hasVariant($state, "password", "password"),
            [sty.revealpassword_code2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "code2", "code2"),
            [sty.revealpassword_code2_saraf2_group11_loginByPassword]:
              hasVariant($state, "group11", "loginByPassword") &&
              hasVariant($state, "password", "password") &&
              hasVariant($state, "saraf2", "saraf2") &&
              hasVariant($state, "code2", "code2")
          })}
          damping={
            hasVariant($state, "group11", "code")
              ? 0.5
              : hasVariant($state, "code2", "code2")
              ? 0.5
              : undefined
          }
          direction={
            hasVariant($state, "group11", "loginByPassword")
              ? "left"
              : hasVariant($state, "group11", "password")
              ? "left"
              : hasVariant($state, "group11", "code")
              ? "left"
              : hasVariant($state, "loginByPassword", "loginByPassword")
              ? "left"
              : hasVariant($state, "password", "password")
              ? "left"
              : hasVariant($state, "code2", "code2")
              ? "left"
              : undefined
          }
          effect={
            hasVariant($state, "group11", "loginByPassword")
              ? "fade"
              : hasVariant($state, "group11", "password")
              ? "fade"
              : hasVariant($state, "group11", "code")
              ? "slide"
              : hasVariant($state, "loginByPassword", "loginByPassword")
              ? "fade"
              : hasVariant($state, "password", "password")
              ? "fade"
              : hasVariant($state, "code2", "code2")
              ? "slide"
              : hasVariant(globalVariants, "screen", "mobileOnly")
              ? "fade"
              : undefined
          }
          reverse={
            hasVariant($state, "group11", "code")
              ? false
              : hasVariant($state, "code2", "code2")
              ? false
              : undefined
          }
          triggerOnce={true}
        >
          <div
            className={classNames(
              projectcss.all,
              sty.freeBox__ss9JK,
              hasVariant($state, "group11", "code") &&
                hasVariant(globalVariants, "screen", "mobileOnly")
                ? "animate"
                : hasVariant($state, "code2", "code2") &&
                  hasVariant(globalVariants, "screen", "mobileOnly")
                ? "animate"
                : undefined,
              {
                [sty.freeBoxcode2__ss9JKDv9B5]: hasVariant(
                  $state,
                  "code2",
                  "code2"
                ),
                [sty.freeBoxcode2_group11_password__ss9JKDv9B5CxClj]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "password"),
                [sty.freeBoxcode2_group11_saraf__ss9JKDv9B5NaBfa]:
                  hasVariant($state, "group11", "saraf") &&
                  hasVariant($state, "code2", "code2"),
                [sty.freeBoxcode2_saraf2__ss9JKDv9B5JmKha]:
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "code2", "code2"),
                [sty.freeBoxgroup11_code__ss9JKYss9U]: hasVariant(
                  $state,
                  "group11",
                  "code"
                ),
                [sty.freeBoxgroup11_loginByPassword__ss9JKe5Wtv]: hasVariant(
                  $state,
                  "group11",
                  "loginByPassword"
                ),
                [sty.freeBoxgroup11_noSaraf__ss9JKHtLqd]: hasVariant(
                  $state,
                  "group11",
                  "noSaraf"
                ),
                [sty.freeBoxgroup11_password__ss9JKcxClj]: hasVariant(
                  $state,
                  "group11",
                  "password"
                ),
                [sty.freeBoxgroup11_saraf__ss9JKnaBfa]: hasVariant(
                  $state,
                  "group11",
                  "saraf"
                ),
                [sty.freeBoxloginByPassword__ss9JK0DikB]: hasVariant(
                  $state,
                  "loginByPassword",
                  "loginByPassword"
                ),
                [sty.freeBoxpassword__ss9JK8PqF9]: hasVariant(
                  $state,
                  "password",
                  "password"
                ),
                [sty.freeBoxpassword_code2__ss9JK8PqF9Dv9B5]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "password", "password"),
                [sty.freeBoxpassword_group11_code__ss9JK8PqF9Yss9U]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "password", "password"),
                [sty.freeBoxsaraf2__ss9JKJmKha]: hasVariant(
                  $state,
                  "saraf2",
                  "saraf2"
                ),
                [sty.freeBoxsaraf2_group11_code__ss9JKJmKhaYss9U]:
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "group11", "code")
              }
            )}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__oDeZc, {
                [sty.freeBoxcode2__oDeZcDv9B5]: hasVariant(
                  $state,
                  "code2",
                  "code2"
                ),
                [sty.freeBoxgroup11_code__oDeZcYss9U]: hasVariant(
                  $state,
                  "group11",
                  "code"
                ),
                [sty.freeBoxgroup11_loginByPassword__oDeZCe5Wtv]: hasVariant(
                  $state,
                  "group11",
                  "loginByPassword"
                ),
                [sty.freeBoxgroup11_password__oDeZCcxClj]: hasVariant(
                  $state,
                  "group11",
                  "password"
                ),
                [sty.freeBoxgroup11_saraf__oDeZCnaBfa]: hasVariant(
                  $state,
                  "group11",
                  "saraf"
                ),
                [sty.freeBoxloginByPassword__oDeZc0DikB]: hasVariant(
                  $state,
                  "loginByPassword",
                  "loginByPassword"
                ),
                [sty.freeBoxpassword__oDeZc8PqF9]: hasVariant(
                  $state,
                  "password",
                  "password"
                ),
                [sty.freeBoxsaraf2__oDeZcJmKha]: hasVariant(
                  $state,
                  "saraf2",
                  "saraf2"
                ),
                [sty.freeBoxsaraf2_group11_loginByPassword__oDeZcJmKhaE5Wtv]:
                  hasVariant($state, "group11", "loginByPassword") &&
                  hasVariant($state, "saraf2", "saraf2")
              })}
            >
              <PlasmicIcon__
                PlasmicIconType={
                  hasVariant($state, "group11", "password")
                    ? Icon154Icon
                    : hasVariant($state, "password", "password")
                    ? Icon154Icon
                    : Icon154Icon
                }
                className={classNames(projectcss.all, sty.svg___6T7, ``, {
                  [sty.svgcode2___6T7Dv9B5]: hasVariant(
                    $state,
                    "code2",
                    "code2"
                  ),
                  [sty.svgcode2_group11_code___6T7Dv9B5Yss9U]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "group11", "code"),
                  [sty.svgcode2_group11_saraf___6T7Dv9B5NaBfa]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "group11", "saraf"),
                  [sty.svgcode2_saraf2___6T7Dv9B5JmKha]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgcode2_saraf2_group11_password___6T7Dv9B5JmKhaCxClj]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "password"),
                  [sty.svggroup11_code___6T7Yss9U]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.svggroup11_loginByPassword___6T7E5Wtv]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.svggroup11_noSaraf___6T7HtLqd]: hasVariant(
                    $state,
                    "group11",
                    "noSaraf"
                  ),
                  [sty.svggroup11_password___6T7CxClj]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.svggroup11_saraf___6T7NaBfa]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.svgloginByPassword___6T70DikB]: hasVariant(
                    $state,
                    "loginByPassword",
                    "loginByPassword"
                  ),
                  [sty.svgloginByPassword_code2_group11_saraf___6T70DikBDv9B5NaBfa]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.svgloginByPassword_code2_saraf2_group11_password___6T70DikBDv9B5JmKhaCxClj]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.svgloginByPassword_group11_code___6T70DikBYss9U]:
                    hasVariant($state, "group11", "code") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.svgloginByPassword_group11_password___6T70DikBCxClj]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "group11", "password"),
                  [sty.svgloginByPassword_password___6T70DikB8PqF9]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "password", "password"),
                  [sty.svgloginByPassword_password_code2_group11_saraf___6T70DikB8PqF9Dv9B5NaBfa]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.svgloginByPassword_password_code2_saraf2___6T70DikB8PqF9Dv9B5JmKha]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.svgloginByPassword_password_group11_code___6T70DikB8PqF9Yss9U]:
                    hasVariant($state, "group11", "code") &&
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.svgloginByPassword_password_group11_saraf___6T70DikB8PqF9NaBfa]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "group11", "saraf"),
                  [sty.svgloginByPassword_password_saraf2___6T70DikB8PqF9JmKha]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgloginByPassword_password_saraf2_group11_code___6T70DikB8PqF9JmKhaYss9U]:
                    hasVariant($state, "group11", "code") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.svgloginByPassword_saraf2_group11_code___6T70DikBJmKhaYss9U]:
                    hasVariant($state, "group11", "code") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.svgloginByPassword_saraf2_group11_password___6T70DikBJmKhaCxClj]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "group11", "password") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgpassword___6T78PqF9]: hasVariant(
                    $state,
                    "password",
                    "password"
                  ),
                  [sty.svgpassword_code2_group11_saraf___6T78PqF9Dv9B5NaBfa]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "password", "password"),
                  [sty.svgpassword_code2_saraf2___6T78PqF9Dv9B5JmKha]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password"),
                  [sty.svgpassword_code2_saraf2_group11_loginByPassword___6T78PqF9Dv9B5JmKhaE5Wtv]:
                    hasVariant($state, "code2", "code2") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "group11", "loginByPassword"),
                  [sty.svgpassword_group11_code___6T78PqF9Yss9U]:
                    hasVariant($state, "group11", "code") &&
                    hasVariant($state, "password", "password"),
                  [sty.svgpassword_group11_loginByPassword___6T78PqF9E5Wtv]:
                    hasVariant($state, "group11", "loginByPassword") &&
                    hasVariant($state, "password", "password"),
                  [sty.svgpassword_group11_saraf___6T78PqF9NaBfa]:
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "password", "password"),
                  [sty.svgpassword_saraf2___6T78PqF9JmKha]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password"),
                  [sty.svgpassword_saraf2_group11_code___6T78PqF9JmKhaYss9U]:
                    hasVariant($state, "group11", "code") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password"),
                  [sty.svgpassword_saraf2_group11_loginByPassword___6T78PqF9JmKhaE5Wtv]:
                    hasVariant($state, "group11", "loginByPassword") &&
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgsaraf2___6T7JmKha]: hasVariant(
                    $state,
                    "saraf2",
                    "saraf2"
                  ),
                  [sty.svgsaraf2_group11_code___6T7JmKhaYss9U]:
                    hasVariant($state, "group11", "code") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgsaraf2_group11_loginByPassword___6T7JmKhaE5Wtv]:
                    hasVariant($state, "group11", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgsaraf2_group11_password___6T7JmKhaCxClj]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "password")
                })}
                id={"logoLogin"}
                role={"img"}
              />

              {false ? (
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__pZ2Jh, {
                    [sty.imggroup11_loginByPassword__pZ2JHe5Wtv]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.imggroup11_noSaraf__pZ2JhHtLqd]: hasVariant(
                      $state,
                      "group11",
                      "noSaraf"
                    ),
                    [sty.imggroup11_password__pZ2JHcxClj]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.imgpassword__pZ2Jh8PqF9]: hasVariant(
                      $state,
                      "password",
                      "password"
                    )
                  })}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/babarkat/images/image10.svg",
                    fullWidth: 100,
                    fullHeight: 100,
                    aspectRatio: 1
                  }}
                />
              ) : null}
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__mauVi, {
                [sty.freeBoxcode2__mauViDv9B5]: hasVariant(
                  $state,
                  "code2",
                  "code2"
                ),
                [sty.freeBoxcode2_group11_saraf__mauViDv9B5NaBfa]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "saraf"),
                [sty.freeBoxcode2_saraf2__mauViDv9B5JmKha]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.freeBoxgroup11_code__mauViYss9U]: hasVariant(
                  $state,
                  "group11",
                  "code"
                ),
                [sty.freeBoxgroup11_loginByPassword__mauVie5Wtv]: hasVariant(
                  $state,
                  "group11",
                  "loginByPassword"
                ),
                [sty.freeBoxgroup11_password__mauVicxClj]: hasVariant(
                  $state,
                  "group11",
                  "password"
                ),
                [sty.freeBoxgroup11_saraf__mauVinaBfa]: hasVariant(
                  $state,
                  "group11",
                  "saraf"
                ),
                [sty.freeBoxloginByPassword__mauVi0DikB]: hasVariant(
                  $state,
                  "loginByPassword",
                  "loginByPassword"
                ),
                [sty.freeBoxloginByPassword_group11_password__mauVi0DikBCxClj]:
                  hasVariant($state, "group11", "password") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.freeBoxloginByPassword_password__mauVi0DikB8PqF9]:
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.freeBoxpassword__mauVi8PqF9]: hasVariant(
                  $state,
                  "password",
                  "password"
                ),
                [sty.freeBoxpassword_group11_loginByPassword__mauVi8PqF9E5Wtv]:
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "group11", "loginByPassword"),
                [sty.freeBoxpassword_group11_saraf__mauVi8PqF9NaBfa]:
                  hasVariant($state, "group11", "saraf") &&
                  hasVariant($state, "password", "password"),
                [sty.freeBoxpassword_saraf2__mauVi8PqF9JmKha]:
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "password", "password"),
                [sty.freeBoxsaraf2__mauViJmKha]: hasVariant(
                  $state,
                  "saraf2",
                  "saraf2"
                ),
                [sty.freeBoxsaraf2_group11_code__mauViJmKhaYss9U]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.freeBoxsaraf2_group11_password__mauViJmKhaCxClj]:
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "group11", "password")
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__eu9Fj, {
                  [sty.freeBoxcode2__eu9FjDv9B5]: hasVariant(
                    $state,
                    "code2",
                    "code2"
                  ),
                  [sty.freeBoxgroup11_code__eu9FjYss9U]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.freeBoxgroup11_loginByPassword__eu9Fje5Wtv]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.freeBoxloginByPassword__eu9Fj0DikB]: hasVariant(
                    $state,
                    "loginByPassword",
                    "loginByPassword"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zL7Oq,
                    {
                      [sty.textcode2__zL7OqDv9B5]: hasVariant(
                        $state,
                        "code2",
                        "code2"
                      ),
                      [sty.textcode2_group11_loginByPassword__zL7OqDv9B5E5Wtv]:
                        hasVariant($state, "group11", "loginByPassword") &&
                        hasVariant($state, "code2", "code2"),
                      [sty.textgroup11_code__zL7OqYss9U]: hasVariant(
                        $state,
                        "group11",
                        "code"
                      ),
                      [sty.textgroup11_loginByPassword__zL7Oqe5Wtv]: hasVariant(
                        $state,
                        "group11",
                        "loginByPassword"
                      ),
                      [sty.textgroup11_noSaraf__zL7OqHtLqd]: hasVariant(
                        $state,
                        "group11",
                        "noSaraf"
                      ),
                      [sty.textgroup11_password__zL7OqcxClj]: hasVariant(
                        $state,
                        "group11",
                        "password"
                      ),
                      [sty.textgroup11_saraf__zL7OqnaBfa]: hasVariant(
                        $state,
                        "group11",
                        "saraf"
                      ),
                      [sty.textloginByPassword__zL7Oq0DikB]: hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ),
                      [sty.textloginByPassword_code2__zL7Oq0DikBDv9B5]:
                        hasVariant(
                          $state,
                          "loginByPassword",
                          "loginByPassword"
                        ) && hasVariant($state, "code2", "code2"),
                      [sty.textloginByPassword_group11_code__zL7Oq0DikBYss9U]:
                        hasVariant(
                          $state,
                          "loginByPassword",
                          "loginByPassword"
                        ) && hasVariant($state, "group11", "code"),
                      [sty.textpassword__zL7Oq8PqF9]: hasVariant(
                        $state,
                        "password",
                        "password"
                      ),
                      [sty.textsaraf2__zL7OqJmKha]: hasVariant(
                        $state,
                        "saraf2",
                        "saraf2"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "group11", "password")
                    ? "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631"
                    : hasVariant($state, "group11", "saraf")
                    ? "\u0627\u0646\u062a\u062e\u0627\u0628 \u0627\u0645\u0627\u0646\u062a\u062f\u0627\u0631\u06cc"
                    : hasVariant($state, "group11", "code")
                    ? "\u06a9\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                    : hasVariant($state, "loginByPassword", "loginByPassword")
                    ? "\u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"
                    : hasVariant($state, "password", "password")
                    ? "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631"
                    : hasVariant($state, "saraf2", "saraf2")
                    ? "\u0627\u0646\u062a\u062e\u0627\u0628 \u0627\u0645\u0627\u0646\u062a\u062f\u0627\u0631\u06cc"
                    : hasVariant($state, "code2", "code2")
                    ? "\u06a9\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                    : "\u062a\u0627\u06cc\u06cc\u062f \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"}
                </div>
                <Button
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button, {
                    [sty.buttoncode2]: hasVariant($state, "code2", "code2"),
                    [sty.buttoncode2_group11_saraf]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "group11", "saraf"),
                    [sty.buttoncode2_saraf2]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.buttongroup11_code]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.buttongroup11_loginByPassword]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.buttongroup11_password]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.buttongroup11_saraf]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.buttonloginByPassword]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.buttonloginByPassword_group11_password]:
                      hasVariant($state, "group11", "password") &&
                      hasVariant($state, "loginByPassword", "loginByPassword"),
                    [sty.buttonloginByPassword_password]:
                      hasVariant($state, "password", "password") &&
                      hasVariant($state, "loginByPassword", "loginByPassword"),
                    [sty.buttonpassword]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.buttonpassword_group11_loginByPassword]:
                      hasVariant($state, "password", "password") &&
                      hasVariant($state, "group11", "loginByPassword"),
                    [sty.buttonpassword_group11_saraf]:
                      hasVariant($state, "group11", "saraf") &&
                      hasVariant($state, "password", "password"),
                    [sty.buttonpassword_saraf2]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "password", "password"),
                    [sty.buttonsaraf2]: hasVariant($state, "saraf2", "saraf2"),
                    [sty.buttonsaraf2_group11_code]:
                      hasVariant($state, "group11", "code") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.buttonsaraf2_group11_password]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "group11", "password")
                  })}
                  color={
                    hasVariant($state, "group11", "code")
                      ? "softGreen"
                      : hasVariant($state, "code2", "code2")
                      ? "softGreen"
                      : undefined
                  }
                  loadingviow={generateStateValueProp($state, [
                    "button",
                    "loadingviow"
                  ])}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateUnnamedVariant"] = true
                      ? (() => {
                          const actionArgs = { vgroup: "code2", operation: 6 };
                          return (({ vgroup, value }) => {
                            if (typeof value === "string") {
                              value = [value];
                            }

                            $stateSet($state, vgroup, false);
                            return false;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateUnnamedVariant"] != null &&
                      typeof $steps["updateUnnamedVariant"] === "object" &&
                      typeof $steps["updateUnnamedVariant"].then === "function"
                    ) {
                      $steps["updateUnnamedVariant"] = await $steps[
                        "updateUnnamedVariant"
                      ];
                    }
                  }}
                  onLoadingviowChange={async (...eventArgs: any) => {
                    ((...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "button",
                        "loadingviow"
                      ])(eventArgs[0]);
                    }).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                >
                  {hasVariant($state, "group11", "code")
                    ? "\u0648\u06cc\u0631\u0627\u06cc\u0634 \u0634\u0645\u0627\u0631\u0647"
                    : hasVariant($state, "code2", "code2")
                    ? "\u0648\u06cc\u0631\u0627\u06cc\u0634 \u0634\u0645\u0627\u0631\u0647"
                    : "Button"}
                </Button>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wdrTs,
                  {
                    [sty.textcode2__wdrTsDv9B5]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.textgroup11_code__wdrTsYss9U]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.textgroup11_loginByPassword__wdrTse5Wtv]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.textgroup11_password__wdrTscxClj]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.textgroup11_saraf__wdrTsnaBfa]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.textloginByPassword__wdrTs0DikB]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.textpassword__wdrTs8PqF9]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.textsaraf2__wdrTsJmKha]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    )
                  }
                )}
              >
                {hasVariant($state, "group11", "saraf") ? (
                  "\u06cc\u06a9\u06cc \u0627\u0632 \u0627\u0645\u0627\u0646\u062a\u062f\u0627\u0631\u06cc \u0647\u0627\u06cc\u06cc \u06a9\u0647 \u0628\u0647 \u0622\u0646\u0647\u0627 \u0645\u062a\u0635\u0644 \u0647\u0633\u062a\u06cc\u062f \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u06a9\u06cc\u0641 \u067e\u0648\u0644\u062a\u0627\u0646 \u0628\u0647 \u0622\u0646 \u0645\u062a\u0635\u0644 \u0634\u0648\u062f."
                ) : hasVariant($state, "group11", "code") ? (
                  <div
                    className={projectcss.__wab_expr_html_text}
                    dangerouslySetInnerHTML={{
                      __html: (() => {
                        try {
                          return (() => {
                            if ($state.selectContry == "+98")
                              return (
                                "لطفا کد 4 رقمی ارسال شده به شماره <b style='color: #2DC57B;'>" +
                                $state.number +
                                "</b> را وارد نمایید."
                              );
                            else
                              return (
                                "لطفا کد 4 رقمی ارسال شده به <b style='color: #2DC57B;'>واتساپ</b> شماره <b style='color: #2DC57B;'>" +
                                $state.number +
                                "</b> را وارد نمایید."
                              );
                          })();
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "\u0644\u0637\u0641\u0627 \u06a9\u062f 4 \u0631\u0642\u0645\u06cc \u0627\u0631\u0633\u0627\u0644 \u0634\u062f\u0647 \u0628\u0647 \u0634\u0645\u0627\u0631\u0647 09155113179 \u0631\u0627 \u0648\u0627\u0631\u062f \u0646\u0645\u0627\u06cc\u06cc\u062f.";
                          }
                          throw e;
                        }
                      })()
                    }}
                  />
                ) : hasVariant($state, "saraf2", "saraf2") ? (
                  "\u06cc\u06a9\u06cc \u0627\u0632 \u0627\u0645\u0627\u0646\u062a\u062f\u0627\u0631\u06cc \u0647\u0627\u06cc\u06cc \u06a9\u0647 \u0628\u0647 \u0622\u0646\u0647\u0627 \u0645\u062a\u0635\u0644 \u0647\u0633\u062a\u06cc\u062f \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u06a9\u06cc\u0641 \u067e\u0648\u0644\u062a\u0627\u0646 \u0628\u0647 \u0622\u0646 \u0645\u062a\u0635\u0644 \u0634\u0648\u062f."
                ) : hasVariant($state, "code2", "code2") ? (
                  <div
                    className={projectcss.__wab_expr_html_text}
                    dangerouslySetInnerHTML={{
                      __html: (() => {
                        try {
                          return (() => {
                            if ($state.selectContry == "+98")
                              return (
                                "لطفا کد 4 رقمی ارسال شده به شماره <b style='color: #2DC57B;'>" +
                                $state.number +
                                "</b> را وارد نمایید."
                              );
                            else
                              return (
                                "لطفا کد 4 رقمی ارسال شده به <b style='color: #2DC57B;'>واتساپ</b> شماره <b style='color: #2DC57B;'>" +
                                $state.number +
                                "</b> را وارد نمایید."
                              );
                          })();
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "\u0644\u0637\u0641\u0627 \u06a9\u062f 4 \u0631\u0642\u0645\u06cc \u0627\u0631\u0633\u0627\u0644 \u0634\u062f\u0647 \u0628\u0647 \u0634\u0645\u0627\u0631\u0647 09155113179 \u0631\u0627 \u0648\u0627\u0631\u062f \u0646\u0645\u0627\u06cc\u06cc\u062f.";
                          }
                          throw e;
                        }
                      })()
                    }}
                  />
                ) : (
                  "\u0644\u0637\u0641\u0627 \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u0646\u0645\u0627\u06cc\u06cc\u062f. \u0633\u067e\u0633 \u06cc\u06a9 \u06a9\u062f \u062a\u0627\u06cc\u06cc\u062f \u0628\u0631\u0627\u06cc \u0627\u062d\u0631\u0627\u0632 \u0647\u0648\u06cc\u062a \u0627\u0631\u0633\u0627\u0644 \u0645\u06cc \u0634\u0648\u062f"
                )}
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__bsqO1)}>
                <Input
                  data-plasmic-name={"fragmentInput"}
                  data-plasmic-override={overrides.fragmentInput}
                  className={classNames("__wab_instance", sty.fragmentInput, {
                    [sty.fragmentInputcode2]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.fragmentInputcode2_group11_saraf]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "group11", "saraf"),
                    [sty.fragmentInputcode2_saraf2]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.fragmentInputgroup11_code]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.fragmentInputgroup11_loginByPassword]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.fragmentInputgroup11_password]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.fragmentInputgroup11_saraf]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.fragmentInputloginByPassword]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.fragmentInputloginByPassword_group11_password]:
                      hasVariant($state, "group11", "password") &&
                      hasVariant($state, "loginByPassword", "loginByPassword"),
                    [sty.fragmentInputloginByPassword_password]:
                      hasVariant($state, "password", "password") &&
                      hasVariant($state, "loginByPassword", "loginByPassword"),
                    [sty.fragmentInputpassword]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.fragmentInputpassword_group11_loginByPassword]:
                      hasVariant($state, "password", "password") &&
                      hasVariant($state, "group11", "loginByPassword"),
                    [sty.fragmentInputpassword_group11_saraf]:
                      hasVariant($state, "group11", "saraf") &&
                      hasVariant($state, "password", "password"),
                    [sty.fragmentInputpassword_saraf2]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "password", "password"),
                    [sty.fragmentInputsaraf2]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    ),
                    [sty.fragmentInputsaraf2_group11_code]:
                      hasVariant($state, "group11", "code") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.fragmentInputsaraf2_group11_password]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "group11", "password")
                  })}
                  disabled={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? false
                      : undefined
                  }
                  onChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "fragmentInput",
                      "value"
                    ]).apply(null, eventArgs);

                    (async value => {
                      const $steps = {};
                    }).apply(null, eventArgs);
                  }}
                  placeholder={(() => {
                    try {
                      return $state.contry.find(
                        item => item.value == $state.selectContry
                      ).phoneFormats.example;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                  type={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "tel"
                      : "tel"
                  }
                  value={generateStateValueProp($state, [
                    "fragmentInput",
                    "value"
                  ])}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox__wvuQl, {
                    [sty.freeBoxcode2__wvuQlDv9B5]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.freeBoxcode2_group11_saraf__wvuQlDv9B5NaBfa]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "group11", "saraf"),
                    [sty.freeBoxcode2_saraf2__wvuQlDv9B5JmKha]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.freeBoxgroup11_code__wvuQlYss9U]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.freeBoxsaraf2_group11_code__wvuQlJmKhaYss9U]:
                      hasVariant($state, "group11", "code") &&
                      hasVariant($state, "saraf2", "saraf2")
                  })}
                >
                  <AntdSelect
                    data-plasmic-name={"select2"}
                    data-plasmic-override={overrides.select2}
                    bordered={false}
                    className={classNames("__wab_instance", sty.select2, {
                      [sty.select2code2]: hasVariant($state, "code2", "code2"),
                      [sty.select2group11_code]: hasVariant(
                        $state,
                        "group11",
                        "code"
                      ),
                      [sty.select2group11_loginByPassword]: hasVariant(
                        $state,
                        "group11",
                        "loginByPassword"
                      ),
                      [sty.select2group11_password]: hasVariant(
                        $state,
                        "group11",
                        "password"
                      ),
                      [sty.select2group11_saraf]: hasVariant(
                        $state,
                        "group11",
                        "saraf"
                      ),
                      [sty.select2loginByPassword]: hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ),
                      [sty.select2loginByPassword_group11_password]:
                        hasVariant($state, "group11", "password") &&
                        hasVariant(
                          $state,
                          "loginByPassword",
                          "loginByPassword"
                        ),
                      [sty.select2loginByPassword_password]:
                        hasVariant($state, "password", "password") &&
                        hasVariant(
                          $state,
                          "loginByPassword",
                          "loginByPassword"
                        ),
                      [sty.select2password]: hasVariant(
                        $state,
                        "password",
                        "password"
                      ),
                      [sty.select2password_group11_loginByPassword]:
                        hasVariant($state, "password", "password") &&
                        hasVariant($state, "group11", "loginByPassword"),
                      [sty.select2password_group11_saraf]:
                        hasVariant($state, "group11", "saraf") &&
                        hasVariant($state, "password", "password"),
                      [sty.select2password_saraf2]:
                        hasVariant($state, "saraf2", "saraf2") &&
                        hasVariant($state, "password", "password"),
                      [sty.select2saraf2]: hasVariant(
                        $state,
                        "saraf2",
                        "saraf2"
                      ),
                      [sty.select2saraf2_group11_password]:
                        hasVariant($state, "saraf2", "saraf2") &&
                        hasVariant($state, "group11", "password")
                    })}
                    defaultStylesClassName={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens,
                      plasmic_plasmic_rich_components_css.plasmic_tokens
                    )}
                    defaultValue={"+98"}
                    onChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "select2",
                        "value"
                      ]).apply(null, eventArgs);
                    }}
                    options={(() => {
                      try {
                        return $state.contry;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()}
                    placeholder={"Select..."}
                    popupScopeClassName={sty["select2__popup"]}
                    size={"large"}
                    value={generateStateValueProp($state, ["select2", "value"])}
                  />
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lh2V1,
                  {
                    [sty.textcode2__lh2V1Dv9B5]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.textcode2_group11_saraf__lh2V1Dv9B5NaBfa]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "group11", "saraf"),
                    [sty.textcode2_saraf2__lh2V1Dv9B5JmKha]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.textgroup11_code__lh2V1Yss9U]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.textgroup11_loginByPassword__lh2V1E5Wtv]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.textgroup11_password__lh2V1CxClj]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.textgroup11_saraf__lh2V1NaBfa]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.textloginByPassword__lh2V10DikB]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.textpassword__lh2V18PqF9]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.textsaraf2__lh2V1JmKha]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    ),
                    [sty.textsaraf2_group11_code__lh2V1JmKhaYss9U]:
                      hasVariant($state, "group11", "code") &&
                      hasVariant($state, "saraf2", "saraf2")
                  }
                )}
                onClick={async event => {
                  const $steps = {};

                  $steps["updateGroup11"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "group11",
                          operation: 0,
                          value: "loginByPassword"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateGroup11"] != null &&
                    typeof $steps["updateGroup11"] === "object" &&
                    typeof $steps["updateGroup11"].then === "function"
                  ) {
                    $steps["updateGroup11"] = await $steps["updateGroup11"];
                  }
                }}
              >
                {
                  "\u0648\u0631\u0648\u062f \u0628\u0627 \u0646\u0627\u0645 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0648 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 >"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aBe0K,
                  {
                    [sty.textcode2__aBe0KDv9B5]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.textcode2_group11_loginByPassword__aBe0KDv9B5E5Wtv]:
                      hasVariant($state, "group11", "loginByPassword") &&
                      hasVariant($state, "code2", "code2"),
                    [sty.textgroup11_code__aBe0KYss9U]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.textgroup11_loginByPassword__aBe0Ke5Wtv]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.textgroup11_password__aBe0KcxClj]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.textgroup11_saraf__aBe0KnaBfa]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.textloginByPassword__aBe0K0DikB]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.textloginByPassword_code2__aBe0K0DikBDv9B5]:
                      hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ) && hasVariant($state, "code2", "code2"),
                    [sty.textloginByPassword_group11_code__aBe0K0DikBYss9U]:
                      hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ) && hasVariant($state, "group11", "code"),
                    [sty.textpassword__aBe0K8PqF9]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.textsaraf2__aBe0KJmKha]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    )
                  }
                )}
              >
                {hasVariant($state, "group11", "password")
                  ? "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631"
                  : hasVariant($state, "group11", "saraf")
                  ? "\u0627\u0646\u062a\u062e\u0627\u0628 \u0635\u0631\u0627\u0641\u06cc"
                  : hasVariant($state, "group11", "code")
                  ? "\u06a9\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                  : hasVariant($state, "loginByPassword", "loginByPassword")
                  ? "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631"
                  : hasVariant($state, "password", "password")
                  ? "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631"
                  : hasVariant($state, "saraf2", "saraf2")
                  ? "\u0627\u0646\u062a\u062e\u0627\u0628 \u0635\u0631\u0627\u0641\u06cc"
                  : hasVariant($state, "code2", "code2")
                  ? "\u06a9\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                  : "\u062a\u0627\u06cc\u06cc\u062f \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__obSwQ,
                  {
                    [sty.textcode2__obSwQDv9B5]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.textgroup11_code__obSwQYss9U]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.textgroup11_loginByPassword__obSwQe5Wtv]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.textgroup11_password__obSwQcxClj]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.textgroup11_saraf__obSwQnaBfa]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.textloginByPassword__obSwQ0DikB]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.textpassword__obSwQ8PqF9]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.textsaraf2__obSwQJmKha]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    )
                  }
                )}
                onClick={async event => {
                  const $steps = {};

                  $steps["updateLoginByPassword"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "loginByPassword",
                          operation: 4
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, true);
                          return true;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateLoginByPassword"] != null &&
                    typeof $steps["updateLoginByPassword"] === "object" &&
                    typeof $steps["updateLoginByPassword"].then === "function"
                  ) {
                    $steps["updateLoginByPassword"] = await $steps[
                      "updateLoginByPassword"
                    ];
                  }
                }}
              >
                {hasVariant($state, "group11", "saraf") ? (
                  "\u06cc\u06a9\u06cc \u0627\u0632 \u0635\u0631\u0627\u0641\u06cc\u200c\u0647\u0627\u06cc\u06cc \u06a9\u0647 \u0628\u0647 \u0622\u0646\u0647\u0627 \u0645\u062a\u0635\u0644 \u0647\u0633\u062a\u06cc\u062f \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u06a9\u06cc\u0641 \u067e\u0648\u0644\u062a\u0627\u0646 \u0628\u0647 \u0622\u0646 \u0645\u062a\u0635\u0644 \u0634\u0648\u062f."
                ) : hasVariant($state, "group11", "code") ? (
                  <div
                    className={projectcss.__wab_expr_html_text}
                    dangerouslySetInnerHTML={{
                      __html: (() => {
                        try {
                          return (() => {
                            if ($state.selectContry == "+98")
                              return (
                                "لطفا کد 4 رقمی ارسال شده به شماره <b style='color: #2DC57B;'>" +
                                $state.number +
                                "</b> را وارد نمایید."
                              );
                            else
                              return (
                                "لطفا کد 4 رقمی ارسال شده به <b style='color: #2DC57B;'>واتساپ</b> شماره <b style='color: #2DC57B;'>" +
                                $state.number +
                                "</b> را وارد نمایید."
                              );
                          })();
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "\u0644\u0637\u0641\u0627 \u06a9\u062f 4 \u0631\u0642\u0645\u06cc \u0627\u0631\u0633\u0627\u0644 \u0634\u062f\u0647 \u0628\u0647 \u0634\u0645\u0627\u0631\u0647 09155113179 \u0631\u0627 \u0648\u0627\u0631\u062f \u0646\u0645\u0627\u06cc\u06cc\u062f.";
                          }
                          throw e;
                        }
                      })()
                    }}
                  />
                ) : hasVariant($state, "saraf2", "saraf2") ? (
                  "\u06cc\u06a9\u06cc \u0627\u0632 \u0635\u0631\u0627\u0641\u06cc\u200c\u0647\u0627\u06cc\u06cc \u06a9\u0647 \u0628\u0647 \u0622\u0646\u0647\u0627 \u0645\u062a\u0635\u0644 \u0647\u0633\u062a\u06cc\u062f \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u06a9\u06cc\u0641 \u067e\u0648\u0644\u062a\u0627\u0646 \u0628\u0647 \u0622\u0646 \u0645\u062a\u0635\u0644 \u0634\u0648\u062f."
                ) : hasVariant($state, "code2", "code2") ? (
                  <div
                    className={projectcss.__wab_expr_html_text}
                    dangerouslySetInnerHTML={{
                      __html: (() => {
                        try {
                          return (() => {
                            if ($state.selectContry == "+98")
                              return (
                                "لطفا کد 4 رقمی ارسال شده به شماره <b style='color: #2DC57B;'>" +
                                $state.number +
                                "</b> را وارد نمایید."
                              );
                            else
                              return (
                                "لطفا کد 4 رقمی ارسال شده به <b style='color: #2DC57B;'>واتساپ</b> شماره <b style='color: #2DC57B;'>" +
                                $state.number +
                                "</b> را وارد نمایید."
                              );
                          })();
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "\u0644\u0637\u0641\u0627 \u06a9\u062f 4 \u0631\u0642\u0645\u06cc \u0627\u0631\u0633\u0627\u0644 \u0634\u062f\u0647 \u0628\u0647 \u0634\u0645\u0627\u0631\u0647 09155113179 \u0631\u0627 \u0648\u0627\u0631\u062f \u0646\u0645\u0627\u06cc\u06cc\u062f.";
                          }
                          throw e;
                        }
                      })()
                    }}
                  />
                ) : (
                  "\u0648\u0631\u0648\u062f \u0628\u0627 \u0646\u0627\u0645 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0648 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 "
                )}
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox___8MdV, {
                  [sty.freeBoxcode2___8MdVDv9B5]: hasVariant(
                    $state,
                    "code2",
                    "code2"
                  ),
                  [sty.freeBoxgroup11_code___8MdVYss9U]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.freeBoxgroup11_loginByPassword___8MdVe5Wtv]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.freeBoxgroup11_password___8MdVcxClj]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.freeBoxgroup11_saraf___8MdVnaBfa]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.freeBoxloginByPassword___8MdV0DikB]: hasVariant(
                    $state,
                    "loginByPassword",
                    "loginByPassword"
                  ),
                  [sty.freeBoxpassword___8MdV8PqF9]: hasVariant(
                    $state,
                    "password",
                    "password"
                  ),
                  [sty.freeBoxsaraf2___8MdVJmKha]: hasVariant(
                    $state,
                    "saraf2",
                    "saraf2"
                  )
                })}
              >
                <Input
                  data-plasmic-name={"fragmentInput3"}
                  data-plasmic-override={overrides.fragmentInput3}
                  className={classNames("__wab_instance", sty.fragmentInput3, {
                    [sty.fragmentInput3code2]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.fragmentInput3group11_code]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.fragmentInput3group11_loginByPassword]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.fragmentInput3group11_password]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.fragmentInput3group11_saraf]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.fragmentInput3loginByPassword]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.fragmentInput3loginByPassword_group11_password]:
                      hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ) && hasVariant($state, "group11", "password"),
                    [sty.fragmentInput3loginByPassword_password]:
                      hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ) && hasVariant($state, "password", "password"),
                    [sty.fragmentInput3password]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.fragmentInput3password_group11_loginByPassword]:
                      hasVariant($state, "group11", "loginByPassword") &&
                      hasVariant($state, "password", "password"),
                    [sty.fragmentInput3saraf2]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    )
                  })}
                  disabled={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? false
                      : undefined
                  }
                  onChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "fragmentInput3",
                      "value"
                    ]).apply(null, eventArgs);

                    (async value => {
                      const $steps = {};
                    }).apply(null, eventArgs);
                  }}
                  placeholder={
                    hasVariant($state, "group11", "loginByPassword")
                      ? ``
                      : hasVariant($state, "group11", "password")
                      ? ``
                      : hasVariant($state, "loginByPassword", "loginByPassword")
                      ? ``
                      : hasVariant($state, "password", "password")
                      ? ``
                      : "98+"
                  }
                  type={
                    hasVariant($state, "group11", "loginByPassword")
                      ? (() => {
                          try {
                            return $state.pass1;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "password";
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "group11", "password")
                      ? (() => {
                          try {
                            return $state.pass1;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "password";
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "loginByPassword", "loginByPassword")
                      ? (() => {
                          try {
                            return $state.pass1;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "password";
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "password", "password")
                      ? (() => {
                          try {
                            return $state.pass1;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "password";
                            }
                            throw e;
                          }
                        })()
                      : hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "tel"
                      : "tel"
                  }
                  value={generateStateValueProp($state, [
                    "fragmentInput3",
                    "value"
                  ])}
                />

                <Icon55Icon
                  className={classNames(projectcss.all, sty.svg__rwAhK, {
                    [sty.svggroup11_loginByPassword__rwAhKe5Wtv]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.svggroup11_password__rwAhKcxClj]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.svgloginByPassword__rwAhK0DikB]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.svgpassword__rwAhK8PqF9]: hasVariant(
                      $state,
                      "password",
                      "password"
                    )
                  })}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updatePass1"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["pass1"]
                            },
                            operation: 0,
                            value: "text"
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updatePass1"] != null &&
                      typeof $steps["updatePass1"] === "object" &&
                      typeof $steps["updatePass1"].then === "function"
                    ) {
                      $steps["updatePass1"] = await $steps["updatePass1"];
                    }

                    $steps["invokeGlobalAction"] = true
                      ? (() => {
                          const actionArgs = { args: [1000] };
                          return $globalActions["Fragment.wait"]?.apply(null, [
                            ...actionArgs.args
                          ]);
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }

                    $steps["runCode2"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["pass1"]
                            },
                            operation: 0,
                            value: "password"
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode2"] != null &&
                      typeof $steps["runCode2"] === "object" &&
                      typeof $steps["runCode2"].then === "function"
                    ) {
                      $steps["runCode2"] = await $steps["runCode2"];
                    }
                  }}
                  role={"img"}
                />
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__hXlRb, {
                  [sty.freeBoxcode2__hXlRbDv9B5]: hasVariant(
                    $state,
                    "code2",
                    "code2"
                  ),
                  [sty.freeBoxgroup11_code__hXlRbYss9U]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  )
                })}
              >
                <Input
                  data-plasmic-name={"fragmentInput2"}
                  data-plasmic-override={overrides.fragmentInput2}
                  className={classNames("__wab_instance", sty.fragmentInput2, {
                    [sty.fragmentInput2code2]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.fragmentInput2code2_group11_code]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "group11", "code"),
                    [sty.fragmentInput2code2_group11_saraf]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "group11", "saraf"),
                    [sty.fragmentInput2code2_saraf2]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.fragmentInput2group11_code]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.fragmentInput2group11_saraf]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.fragmentInput2saraf2]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    ),
                    [sty.fragmentInput2saraf2_group11_code]:
                      hasVariant($state, "group11", "code") &&
                      hasVariant($state, "saraf2", "saraf2")
                  })}
                  disabled={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? false
                      : undefined
                  }
                  onChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "fragmentInput2",
                      "value"
                    ]).apply(null, eventArgs);

                    (async value => {
                      const $steps = {};
                    }).apply(null, eventArgs);
                  }}
                  placeholder={
                    hasVariant($state, "group11", "code")
                      ? ``
                      : hasVariant($state, "code2", "code2")
                      ? ``
                      : ``
                  }
                  type={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "tel"
                      : "number"
                  }
                  value={generateStateValueProp($state, [
                    "fragmentInput2",
                    "value"
                  ])}
                />
              </div>
              {(
                hasVariant($state, "group11", "code") &&
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? (() => {
                      try {
                        return $state.time != 0;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "group11", "code")
                  ? (() => {
                      try {
                        return $state.time != 0;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "code2", "code2") &&
                    hasVariant(globalVariants, "screen", "mobileOnly")
                  ? (() => {
                      try {
                        return $state.time != 0;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "code2", "code2")
                  ? (() => {
                      try {
                        return $state.time != 0;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
                  : true
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7LuKp,
                    {
                      [sty.textcode2___7LuKpDv9B5]: hasVariant(
                        $state,
                        "code2",
                        "code2"
                      ),
                      [sty.textcode2_group11_saraf___7LuKpDv9B5NaBfa]:
                        hasVariant($state, "group11", "saraf") &&
                        hasVariant($state, "code2", "code2"),
                      [sty.textcode2_saraf2___7LuKpDv9B5JmKha]:
                        hasVariant($state, "saraf2", "saraf2") &&
                        hasVariant($state, "code2", "code2"),
                      [sty.textgroup11_code___7LuKpYss9U]: hasVariant(
                        $state,
                        "group11",
                        "code"
                      ),
                      [sty.textgroup11_saraf___7LuKpnaBfa]: hasVariant(
                        $state,
                        "group11",
                        "saraf"
                      ),
                      [sty.textsaraf2_group11_code___7LuKpJmKhaYss9U]:
                        hasVariant($state, "saraf2", "saraf2") &&
                        hasVariant($state, "group11", "code")
                    }
                  )}
                >
                  {hasVariant($state, "group11", "code") &&
                  hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    <div
                      className={projectcss.__wab_expr_html_text}
                      dangerouslySetInnerHTML={{
                        __html: (() => {
                          try {
                            return (
                              "ارسال مجدد پیامک  (" +
                              "<b style='color: #2DC57B;'>" +
                              $state.time +
                              "</b>" +
                              ")"
                            );
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "\u0627\u0631\u0633\u0627\u0644 \u0645\u062c\u062f\u062f \u067e\u06cc\u0627\u0645\u06a9 (38)";
                            }
                            throw e;
                          }
                        })()
                      }}
                    />
                  ) : hasVariant($state, "group11", "code") ? (
                    <div
                      className={projectcss.__wab_expr_html_text}
                      dangerouslySetInnerHTML={{
                        __html: (() => {
                          try {
                            return (
                              "ارسال مجدد پیامک  (" +
                              "<b style='color: #2DC57B;'>" +
                              $state.time +
                              "</b>" +
                              ")"
                            );
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "\u0627\u0631\u0633\u0627\u0644 \u0645\u062c\u062f\u062f \u067e\u06cc\u0627\u0645\u06a9 (38)";
                            }
                            throw e;
                          }
                        })()
                      }}
                    />
                  ) : hasVariant($state, "code2", "code2") &&
                    hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    <div
                      className={projectcss.__wab_expr_html_text}
                      dangerouslySetInnerHTML={{
                        __html: (() => {
                          try {
                            return (
                              "ارسال مجدد پیامک  (" +
                              "<b style='color: #2DC57B;'>" +
                              $state.time +
                              "</b>" +
                              ")"
                            );
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "\u0627\u0631\u0633\u0627\u0644 \u0645\u062c\u062f\u062f \u067e\u06cc\u0627\u0645\u06a9 (38)";
                            }
                            throw e;
                          }
                        })()
                      }}
                    />
                  ) : hasVariant($state, "code2", "code2") ? (
                    <div
                      className={projectcss.__wab_expr_html_text}
                      dangerouslySetInnerHTML={{
                        __html: (() => {
                          try {
                            return (
                              "ارسال مجدد پیامک  (" +
                              "<b style='color: #2DC57B;'>" +
                              $state.time +
                              "</b>" +
                              ")"
                            );
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "\u0627\u0631\u0633\u0627\u0644 \u0645\u062c\u062f\u062f \u067e\u06cc\u0627\u0645\u06a9 (38)";
                            }
                            throw e;
                          }
                        })()
                      }}
                    />
                  ) : (
                    "\u0627\u0631\u0633\u0627\u0644 \u0645\u062c\u062f\u062f \u067e\u06cc\u0627\u0645\u06a9 (38)"
                  )}
                </div>
              ) : null}
              <Timer
                data-plasmic-name={"timer"}
                data-plasmic-override={overrides.timer}
                className={classNames("__wab_instance", sty.timer, {
                  [sty.timercode2]: hasVariant($state, "code2", "code2"),
                  [sty.timergroup11_code]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.timergroup11_password]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.timerpassword]: hasVariant(
                    $state,
                    "password",
                    "password"
                  )
                })}
                intervalSeconds={
                  hasVariant($state, "group11", "code")
                    ? 1
                    : hasVariant($state, "code2", "code2")
                    ? 1
                    : undefined
                }
                isRunning={
                  hasVariant($state, "group11", "code")
                    ? true
                    : hasVariant($state, "code2", "code2")
                    ? true
                    : true
                }
                onTick={async () => {
                  const $steps = {};

                  $steps["updateTime"] =
                    $state.time > 0
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["time"]
                            },
                            operation: 3
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            const oldValue = $stateGet(objRoot, variablePath);
                            $stateSet(objRoot, variablePath, oldValue - 1);
                            return oldValue - 1;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                  if (
                    $steps["updateTime"] != null &&
                    typeof $steps["updateTime"] === "object" &&
                    typeof $steps["updateTime"].then === "function"
                  ) {
                    $steps["updateTime"] = await $steps["updateTime"];
                  }
                }}
                runWhileEditing={
                  hasVariant($state, "group11", "code")
                    ? false
                    : hasVariant($state, "code2", "code2")
                    ? false
                    : false
                }
              />

              {(
                hasVariant($state, "group11", "code") &&
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? (() => {
                      try {
                        return $state.time == 0;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "group11", "code")
                  ? (() => {
                      try {
                        return $state.time == 0;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "code2", "code2") &&
                    hasVariant(globalVariants, "screen", "mobileOnly")
                  ? (() => {
                      try {
                        return $state.time == 0;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "code2", "code2")
                  ? (() => {
                      try {
                        return $state.time == 0;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
                  : false
              ) ? (
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qrzqV,
                    {
                      [sty.textcode2__qrzqVDv9B5]: hasVariant(
                        $state,
                        "code2",
                        "code2"
                      ),
                      [sty.textgroup11_code__qrzqVYss9U]: hasVariant(
                        $state,
                        "group11",
                        "code"
                      )
                    }
                  )}
                  onClick={async event => {
                    const $steps = {};

                    $steps["invokeGlobalAction"] = true
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "GET",
                              "https://n8n.babarkat.com/webhook/Babarkat/login",
                              (() => {
                                try {
                                  return { mobile: $state.number };
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })(),
                              undefined
                            ]
                          };
                          return $globalActions["Fragment.apiRequest"]?.apply(
                            null,
                            [...actionArgs.args]
                          );
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }

                    $steps["updateTime"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["time"]
                            },
                            operation: 0,
                            value: 60
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateTime"] != null &&
                      typeof $steps["updateTime"] === "object" &&
                      typeof $steps["updateTime"].then === "function"
                    ) {
                      $steps["updateTime"] = await $steps["updateTime"];
                    }
                  }}
                >
                  {hasVariant($state, "group11", "code")
                    ? "\u0627\u0631\u0633\u0627\u0644 \u0645\u062c\u062f\u062f \u067e\u06cc\u0627\u0645\u06a9"
                    : hasVariant($state, "code2", "code2")
                    ? "\u0627\u0631\u0633\u0627\u0644 \u0645\u062c\u062f\u062f \u067e\u06cc\u0627\u0645\u06a9"
                    : "\u0627\u0631\u0633\u0627\u0644 \u0645\u062c\u062f\u062f \u067e\u06cc\u0627\u0645\u06a9 (38)"}
                </div>
              ) : null}
              <AntdSelect
                data-plasmic-name={"select"}
                data-plasmic-override={overrides.select}
                className={classNames("__wab_instance", sty.select, {
                  [sty.selectcode2]: hasVariant($state, "code2", "code2"),
                  [sty.selectcode2_group11_saraf]:
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.selectcode2_saraf2]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.selectgroup11_code]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.selectgroup11_saraf]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.selectsaraf2]: hasVariant($state, "saraf2", "saraf2"),
                  [sty.selectsaraf2_group11_code]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "code")
                })}
                defaultStylesClassName={classNames(
                  projectcss.root_reset,
                  projectcss.plasmic_default_styles,
                  projectcss.plasmic_mixins,
                  projectcss.plasmic_tokens,
                  plasmic_antd_5_hostless_css.plasmic_tokens,
                  plasmic_plasmic_rich_components_css.plasmic_tokens
                )}
                defaultValue={
                  hasVariant($state, "group11", "saraf") &&
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? (() => {
                        try {
                          return $state.saraf[0].value;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return 100;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant(globalVariants, "screen", "mobileOnly")
                    ? (() => {
                        try {
                          return $state.saraf[0].value;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return 100;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant(globalVariants, "screen", "mobileOnly")
                    ? (() => {
                        try {
                          return $state.saraf[0].value;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return 100;
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return $state.saraf[0].value;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return 100;
                          }
                          throw e;
                        }
                      })()
                }
                onChange={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, ["select", "value"]).apply(
                    null,
                    eventArgs
                  );

                  (async (value, option) => {
                    const $steps = {};
                  }).apply(null, eventArgs);
                }}
                options={(() => {
                  try {
                    return $state.saraf;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [{ type: "option" }];
                    }
                    throw e;
                  }
                })()}
                placeholder={null}
                popupScopeClassName={sty["select__popup"]}
                size={"large"}
                suffixIcon={
                  <PlasmicIcon__
                    PlasmicIconType={
                      hasVariant($state, "group11", "saraf") &&
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? Icon37Icon
                        : hasVariant($state, "saraf2", "saraf2") &&
                          hasVariant(globalVariants, "screen", "mobileOnly")
                        ? Icon37Icon
                        : Icon10Icon
                    }
                    className={classNames(projectcss.all, sty.svg__bIJr, {
                      [sty.svggroup11_saraf__bIJrNaBfa]: hasVariant(
                        $state,
                        "group11",
                        "saraf"
                      ),
                      [sty.svgsaraf2__bIJrJmKha]: hasVariant(
                        $state,
                        "saraf2",
                        "saraf2"
                      )
                    })}
                    role={"img"}
                  />
                }
                value={generateStateValueProp($state, ["select", "value"])}
              />
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__vfBkC,
                {
                  [sty.textcode2__vfBkCDv9B5]: hasVariant(
                    $state,
                    "code2",
                    "code2"
                  ),
                  [sty.textgroup11_code__vfBkCYss9U]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.textgroup11_loginByPassword__vfBkCe5Wtv]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.textgroup11_password__vfBkCcxClj]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.textgroup11_saraf__vfBkCnaBfa]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.textloginByPassword__vfBkC0DikB]: hasVariant(
                    $state,
                    "loginByPassword",
                    "loginByPassword"
                  ),
                  [sty.textloginByPassword_group11_loginByPassword__vfBkC0DikBE5Wtv]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "group11", "loginByPassword"),
                  [sty.textloginByPassword_group11_password__vfBkC0DikBCxClj]:
                    hasVariant($state, "group11", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.textloginByPassword_password__vfBkC0DikB8PqF9]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.textpassword__vfBkC8PqF9]: hasVariant(
                    $state,
                    "password",
                    "password"
                  ),
                  [sty.textpassword_group11_loginByPassword__vfBkC8PqF9E5Wtv]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "group11", "loginByPassword"),
                  [sty.textpassword_group11_password__vfBkC8PqF9CxClj]:
                    hasVariant($state, "group11", "password") &&
                    hasVariant($state, "password", "password"),
                  [sty.textsaraf2__vfBkCJmKha]: hasVariant(
                    $state,
                    "saraf2",
                    "saraf2"
                  )
                }
              )}
              onClick={async event => {
                const $steps = {};

                $steps["goToLogIn3"] = true
                  ? (() => {
                      const actionArgs = { destination: `/Forgotten-password` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToLogIn3"] != null &&
                  typeof $steps["goToLogIn3"] === "object" &&
                  typeof $steps["goToLogIn3"].then === "function"
                ) {
                  $steps["goToLogIn3"] = await $steps["goToLogIn3"];
                }
              }}
            >
              {hasVariant($state, "group11", "loginByPassword")
                ? "\u0622\u06cc\u0627 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062e\u0648\u062f \u0631\u0627 \u0641\u0631\u0627\u0645\u0648\u0634 \u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f\u061f"
                : hasVariant($state, "group11", "password")
                ? "\u0622\u06cc\u0627 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062e\u0648\u062f \u0631\u0627 \u0641\u0631\u0627\u0645\u0648\u0634 \u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f\u061f"
                : hasVariant($state, "group11", "saraf")
                ? "\u0627\u0646\u062a\u062e\u0627\u0628 \u0635\u0631\u0627\u0641\u06cc"
                : hasVariant($state, "group11", "code")
                ? "\u06a9\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                : hasVariant($state, "loginByPassword", "loginByPassword")
                ? "\u0622\u06cc\u0627 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062e\u0648\u062f \u0631\u0627 \u0641\u0631\u0627\u0645\u0648\u0634 \u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f\u061f"
                : hasVariant($state, "password", "password")
                ? "\u0622\u06cc\u0627 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062e\u0648\u062f \u0631\u0627 \u0641\u0631\u0627\u0645\u0648\u0634 \u06a9\u0631\u062f\u0647\u200c\u0627\u06cc\u062f\u061f"
                : hasVariant($state, "saraf2", "saraf2")
                ? "\u0627\u0646\u062a\u062e\u0627\u0628 \u0635\u0631\u0627\u0641\u06cc"
                : hasVariant($state, "code2", "code2")
                ? "\u06a9\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                : "\u062a\u0627\u06cc\u06cc\u062f \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"}
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__rr6S, {
                [sty.freeBoxcode2__rr6SDv9B5]: hasVariant(
                  $state,
                  "code2",
                  "code2"
                ),
                [sty.freeBoxgroup11_code__rr6SYss9U]: hasVariant(
                  $state,
                  "group11",
                  "code"
                ),
                [sty.freeBoxgroup11_loginByPassword__rr6Se5Wtv]: hasVariant(
                  $state,
                  "group11",
                  "loginByPassword"
                ),
                [sty.freeBoxgroup11_password__rr6ScxClj]: hasVariant(
                  $state,
                  "group11",
                  "password"
                ),
                [sty.freeBoxgroup11_saraf__rr6SnaBfa]: hasVariant(
                  $state,
                  "group11",
                  "saraf"
                ),
                [sty.freeBoxloginByPassword__rr6S0DikB]: hasVariant(
                  $state,
                  "loginByPassword",
                  "loginByPassword"
                ),
                [sty.freeBoxpassword__rr6S8PqF9]: hasVariant(
                  $state,
                  "password",
                  "password"
                ),
                [sty.freeBoxsaraf2__rr6SJmKha]: hasVariant(
                  $state,
                  "saraf2",
                  "saraf2"
                )
              })}
            >
              <Button
                data-plasmic-name={"btnNumber"}
                data-plasmic-override={overrides.btnNumber}
                className={classNames("__wab_instance", sty.btnNumber, {
                  [sty.btnNumbercode2]: hasVariant($state, "code2", "code2"),
                  [sty.btnNumbercode2_group11_saraf]:
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.btnNumbercode2_saraf2]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.btnNumbergroup11_code]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.btnNumbergroup11_loginByPassword]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.btnNumbergroup11_password]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.btnNumbergroup11_saraf]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.btnNumberloginByPassword]: hasVariant(
                    $state,
                    "loginByPassword",
                    "loginByPassword"
                  ),
                  [sty.btnNumberpassword]: hasVariant(
                    $state,
                    "password",
                    "password"
                  ),
                  [sty.btnNumberpassword_group11_saraf]:
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "password", "password"),
                  [sty.btnNumberpassword_saraf2]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password"),
                  [sty.btnNumbersaraf2]: hasVariant($state, "saraf2", "saraf2"),
                  [sty.btnNumbersaraf2_group11_code]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "code"),
                  [sty.btnNumbersaraf2_group11_password]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "password")
                })}
                color={"green"}
                endIcon={
                  <IconIcon
                    className={classNames(projectcss.all, sty.svg__ke3Bs)}
                    role={"img"}
                  />
                }
                isDisabled={(() => {
                  try {
                    return (
                      !$state.fragmentInput.value.match(
                        $state.contry.find(
                          item => item.value === $state.selectContry
                        ).phoneFormats.regex
                      ) || $state.loadedbtn
                    );
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()}
                loadingviow={generateStateValueProp($state, [
                  "btnNumber",
                  "loadingviow"
                ])}
                onClick={async event => {
                  const $steps = {};

                  $steps["updateLoadedbtn"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["loadedbtn"]
                          },
                          operation: 0,
                          value: true
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateLoadedbtn"] != null &&
                    typeof $steps["updateLoadedbtn"] === "object" &&
                    typeof $steps["updateLoadedbtn"].then === "function"
                  ) {
                    $steps["updateLoadedbtn"] = await $steps["updateLoadedbtn"];
                  }

                  $steps["updateNumber"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["number"]
                          },
                          operation: 0,
                          value: (() => {
                            if ($state.selectContry == "+98")
                              return "0" + $state.fragmentInput.value;
                            else
                              return (
                                $state.selectContry + $state.fragmentInput.value
                              );
                          })()
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateNumber"] != null &&
                    typeof $steps["updateNumber"] === "object" &&
                    typeof $steps["updateNumber"].then === "function"
                  ) {
                    $steps["updateNumber"] = await $steps["updateNumber"];
                  }

                  $steps["invokeGlobalAction2"] = true
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "GET",
                            "https://n8n.babarkat.com/webhook/Babarkat/login",
                            (() => {
                              try {
                                return { mobile: $state.number };
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })(),
                            undefined
                          ]
                        };
                        return $globalActions["Fragment.apiRequest"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["invokeGlobalAction2"] != null &&
                    typeof $steps["invokeGlobalAction2"] === "object" &&
                    typeof $steps["invokeGlobalAction2"].then === "function"
                  ) {
                    $steps["invokeGlobalAction2"] = await $steps[
                      "invokeGlobalAction2"
                    ];
                  }

                  $steps["invokeGlobalAction3"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === false
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "error",
                            "\u0634\u0645\u0627\u0631\u0647\u200c\u06cc \u0648\u0627\u0631\u062f \u0634\u062f\u0647 \u0645\u0639\u062a\u0628\u0631 \u0646\u06cc\u0633\u062a.",
                            "top-left"
                          ]
                        };
                        return $globalActions["Fragment.showToast"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["invokeGlobalAction3"] != null &&
                    typeof $steps["invokeGlobalAction3"] === "object" &&
                    typeof $steps["invokeGlobalAction3"].then === "function"
                  ) {
                    $steps["invokeGlobalAction3"] = await $steps[
                      "invokeGlobalAction3"
                    ];
                  }

                  $steps["updateUnnamedVariant"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === true
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          vgroup: "group11",
                          operation: 0,
                          value: "code"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateUnnamedVariant"] != null &&
                    typeof $steps["updateUnnamedVariant"] === "object" &&
                    typeof $steps["updateUnnamedVariant"].then === "function"
                  ) {
                    $steps["updateUnnamedVariant"] = await $steps[
                      "updateUnnamedVariant"
                    ];
                  }

                  $steps["updateLoadedbtn2"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["loadedbtn"]
                          },
                          operation: 0,
                          value: false
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateLoadedbtn2"] != null &&
                    typeof $steps["updateLoadedbtn2"] === "object" &&
                    typeof $steps["updateLoadedbtn2"].then === "function"
                  ) {
                    $steps["updateLoadedbtn2"] = await $steps[
                      "updateLoadedbtn2"
                    ];
                  }

                  $steps["updateFragmentInputValue4"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["time"]
                          },
                          operation: 0,
                          value: 60
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateFragmentInputValue4"] != null &&
                    typeof $steps["updateFragmentInputValue4"] === "object" &&
                    typeof $steps["updateFragmentInputValue4"].then ===
                      "function"
                  ) {
                    $steps["updateFragmentInputValue4"] = await $steps[
                      "updateFragmentInputValue4"
                    ];
                  }
                }}
                onLoadingviowChange={async (...eventArgs: any) => {
                  ((...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "btnNumber",
                      "loadingviow"
                    ])(eventArgs[0]);
                  }).apply(null, eventArgs);

                  if (
                    eventArgs.length > 1 &&
                    eventArgs[1] &&
                    eventArgs[1]._plasmic_state_init_
                  ) {
                    return;
                  }
                }}
                showEndIcon={(() => {
                  try {
                    return $state.loadedbtn;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1TNZm
                  )}
                >
                  {
                    "\u0627\u0631\u0633\u0627\u0644 \u06a9\u062f \u062a\u0627\u06cc\u06cc\u062f"
                  }
                </div>
              </Button>
              <Button
                data-plasmic-name={"button2"}
                data-plasmic-override={overrides.button2}
                className={classNames("__wab_instance", sty.button2, {
                  [sty.button2code2]: hasVariant($state, "code2", "code2"),
                  [sty.button2code2_group11_saraf]:
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.button2code2_saraf2]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.button2group11_code]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.button2group11_loginByPassword]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.button2group11_password]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.button2group11_saraf]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.button2loginByPassword]: hasVariant(
                    $state,
                    "loginByPassword",
                    "loginByPassword"
                  ),
                  [sty.button2loginByPassword_group11_password]:
                    hasVariant($state, "group11", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.button2loginByPassword_password]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.button2password]: hasVariant(
                    $state,
                    "password",
                    "password"
                  ),
                  [sty.button2password_group11_loginByPassword]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "group11", "loginByPassword"),
                  [sty.button2saraf2]: hasVariant($state, "saraf2", "saraf2"),
                  [sty.button2saraf2_group11_code]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "code")
                })}
                color={"green"}
                endIcon={
                  <IconIcon
                    className={classNames(projectcss.all, sty.svg__cy30B)}
                    role={"img"}
                  />
                }
                isDisabled={
                  hasVariant($state, "group11", "loginByPassword")
                    ? (() => {
                        try {
                          return (
                            $state.fragmentInput.value.length != 11 ||
                            $state.fragmentInput3.value.length == 0 ||
                            $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "group11", "password")
                    ? (() => {
                        try {
                          return (
                            $state.fragmentInput3.value.length == 0 ||
                            $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "loginByPassword", "loginByPassword")
                    ? (() => {
                        try {
                          return (
                            $state.fragmentInput.value.length != 11 ||
                            $state.fragmentInput3.value.length == 0 ||
                            $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "password", "password")
                    ? (() => {
                        try {
                          return (
                            $state.fragmentInput3.value.length == 0 ||
                            $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return (
                            $state.fragmentInput.value.length != 11 ||
                            $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                }
                loadingviow={generateStateValueProp($state, [
                  "button2",
                  "loadingviow"
                ])}
                onClick={async event => {
                  const $steps = {};

                  $steps["updateLoadedbtn"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["loadedbtn"]
                          },
                          operation: 0,
                          value: true
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateLoadedbtn"] != null &&
                    typeof $steps["updateLoadedbtn"] === "object" &&
                    typeof $steps["updateLoadedbtn"].then === "function"
                  ) {
                    $steps["updateLoadedbtn"] = await $steps["updateLoadedbtn"];
                  }

                  $steps["invokeGlobalAction2"] = true
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "POST",
                            "https://n8n.babarkat.com/webhook/Babarkat/password",
                            undefined,
                            (() => {
                              try {
                                return {
                                  mobile: JSON.parse(
                                    localStorage.getItem("userbabarcat")
                                  ).mobile,
                                  password: $state.fragmentInput3.value
                                };
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          ]
                        };
                        return $globalActions["Fragment.apiRequest"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["invokeGlobalAction2"] != null &&
                    typeof $steps["invokeGlobalAction2"] === "object" &&
                    typeof $steps["invokeGlobalAction2"].then === "function"
                  ) {
                    $steps["invokeGlobalAction2"] = await $steps[
                      "invokeGlobalAction2"
                    ];
                  }

                  $steps["invokeGlobalAction3"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === false
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "error",
                            "\u0631\u0645\u0632 \u0646\u0627\u062f\u0631\u0633\u062a \u0627\u0633\u062a.",
                            "top-left"
                          ]
                        };
                        return $globalActions["Fragment.showToast"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["invokeGlobalAction3"] != null &&
                    typeof $steps["invokeGlobalAction3"] === "object" &&
                    typeof $steps["invokeGlobalAction3"].then === "function"
                  ) {
                    $steps["invokeGlobalAction3"] = await $steps[
                      "invokeGlobalAction3"
                    ];
                  }

                  $steps["updateFragmentInputValue2"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === true
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return (() => {
                              const item = {
                                value:
                                  $steps.invokeGlobalAction2.data[0].data.token,
                                expiration:
                                  new Date().getTime() + 10 * 60 * 1000
                              };
                              return sessionStorage.setItem(
                                "userbabarcatToken",
                                JSON.stringify(item)
                              );
                            })();
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateFragmentInputValue2"] != null &&
                    typeof $steps["updateFragmentInputValue2"] === "object" &&
                    typeof $steps["updateFragmentInputValue2"].then ===
                      "function"
                  ) {
                    $steps["updateFragmentInputValue2"] = await $steps[
                      "updateFragmentInputValue2"
                    ];
                  }

                  $steps["goToHomepage"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === true
                      : false
                  )
                    ? (() => {
                        const actionArgs = { destination: `/` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToHomepage"] != null &&
                    typeof $steps["goToHomepage"] === "object" &&
                    typeof $steps["goToHomepage"].then === "function"
                  ) {
                    $steps["goToHomepage"] = await $steps["goToHomepage"];
                  }

                  $steps["invokeGlobalAction"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === true
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "POST",
                            "https://n8n.babarkat.com/webhook/users/logLaunch",
                            undefined,
                            (() => {
                              try {
                                return {
                                  type: "loginPassword",
                                  userToken: JSON.parse(
                                    sessionStorage.getItem("userbabarcatToken")
                                  ).value
                                };
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          ]
                        };
                        return $globalActions["Fragment.apiRequest"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["invokeGlobalAction"] != null &&
                    typeof $steps["invokeGlobalAction"] === "object" &&
                    typeof $steps["invokeGlobalAction"].then === "function"
                  ) {
                    $steps["invokeGlobalAction"] = await $steps[
                      "invokeGlobalAction"
                    ];
                  }

                  $steps["updateLoadedbtn2"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["loadedbtn"]
                          },
                          operation: 0,
                          value: false
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateLoadedbtn2"] != null &&
                    typeof $steps["updateLoadedbtn2"] === "object" &&
                    typeof $steps["updateLoadedbtn2"].then === "function"
                  ) {
                    $steps["updateLoadedbtn2"] = await $steps[
                      "updateLoadedbtn2"
                    ];
                  }
                }}
                onLoadingviowChange={async (...eventArgs: any) => {
                  ((...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "button2",
                      "loadingviow"
                    ])(eventArgs[0]);
                  }).apply(null, eventArgs);

                  if (
                    eventArgs.length > 1 &&
                    eventArgs[1] &&
                    eventArgs[1]._plasmic_state_init_
                  ) {
                    return;
                  }
                }}
                showEndIcon={(() => {
                  try {
                    return $state.loadedbtn;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yawAd,
                    {
                      [sty.textgroup11_loginByPassword__yawAde5Wtv]: hasVariant(
                        $state,
                        "group11",
                        "loginByPassword"
                      ),
                      [sty.textgroup11_password__yawAdcxClj]: hasVariant(
                        $state,
                        "group11",
                        "password"
                      ),
                      [sty.textloginByPassword__yawAd0DikB]: hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ),
                      [sty.textpassword__yawAd8PqF9]: hasVariant(
                        $state,
                        "password",
                        "password"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "group11", "loginByPassword")
                    ? "\u0648\u0631\u0648\u062f"
                    : hasVariant($state, "group11", "password")
                    ? "\u0648\u0631\u0648\u062f"
                    : hasVariant($state, "loginByPassword", "loginByPassword")
                    ? "\u0648\u0631\u0648\u062f"
                    : hasVariant($state, "password", "password")
                    ? "\u0648\u0631\u0648\u062f"
                    : "\u0627\u0631\u0633\u0627\u0644 \u06a9\u062f \u062a\u0627\u06cc\u06cc\u062f"}
                </div>
              </Button>
              <Button
                data-plasmic-name={"button3"}
                data-plasmic-override={overrides.button3}
                className={classNames("__wab_instance", sty.button3, {
                  [sty.button3code2]: hasVariant($state, "code2", "code2"),
                  [sty.button3code2_group11_saraf]:
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.button3code2_saraf2]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.button3group11_code]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.button3group11_loginByPassword]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.button3group11_password]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.button3group11_saraf]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.button3loginByPassword]: hasVariant(
                    $state,
                    "loginByPassword",
                    "loginByPassword"
                  ),
                  [sty.button3loginByPassword_group11_password]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "group11", "password"),
                  [sty.button3loginByPassword_group11_saraf]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "group11", "saraf"),
                  [sty.button3loginByPassword_password]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "password", "password"),
                  [sty.button3loginByPassword_password_group11_saraf]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "password", "password"),
                  [sty.button3loginByPassword_password_saraf2]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password"),
                  [sty.button3loginByPassword_saraf2]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.button3loginByPassword_saraf2_group11_password]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "password"),
                  [sty.button3password]: hasVariant(
                    $state,
                    "password",
                    "password"
                  ),
                  [sty.button3password_group11_loginByPassword]:
                    hasVariant($state, "group11", "loginByPassword") &&
                    hasVariant($state, "password", "password"),
                  [sty.button3password_group11_saraf]:
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "password", "password"),
                  [sty.button3password_saraf2]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password"),
                  [sty.button3password_saraf2_group11_loginByPassword]:
                    hasVariant($state, "group11", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "password", "password"),
                  [sty.button3saraf2]: hasVariant($state, "saraf2", "saraf2"),
                  [sty.button3saraf2_group11_code]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "code"),
                  [sty.button3saraf2_group11_loginByPassword]:
                    hasVariant($state, "group11", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.button3saraf2_group11_password]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "password")
                })}
                color={"green"}
                endIcon={
                  <IconIcon
                    className={classNames(projectcss.all, sty.svg___5Hjd)}
                    role={"img"}
                  />
                }
                isDisabled={
                  hasVariant($state, "group11", "loginByPassword") &&
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? (() => {
                        try {
                          return (
                            !$state.fragmentInput.value.match(
                              $state.contry.find(
                                item => item.value === $state.selectContry
                              ).phoneFormats.regex
                            ) || $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "group11", "loginByPassword")
                    ? (() => {
                        try {
                          return (
                            !$state.fragmentInput.value.match(
                              $state.contry.find(
                                item => item.value === $state.selectContry
                              ).phoneFormats.regex
                            ) || $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "group11", "password")
                    ? (() => {
                        try {
                          return (
                            $state.fragmentInput3.value.length == 0 ||
                            $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ) && hasVariant(globalVariants, "screen", "mobileOnly")
                    ? (() => {
                        try {
                          return (
                            !$state.fragmentInput.value.match(
                              $state.contry.find(
                                item => item.value === $state.selectContry
                              ).phoneFormats.regex
                            ) || $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "loginByPassword", "loginByPassword")
                    ? (() => {
                        try {
                          return (
                            !$state.fragmentInput.value.match(
                              $state.contry.find(
                                item => item.value === $state.selectContry
                              ).phoneFormats.regex
                            ) || $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "password", "password")
                    ? (() => {
                        try {
                          return (
                            $state.fragmentInput3.value.length == 0 ||
                            $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return (
                            $state.fragmentInput.value.length != 11 ||
                            $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                }
                loadingviow={generateStateValueProp($state, [
                  "button3",
                  "loadingviow"
                ])}
                onClick={async event => {
                  const $steps = {};

                  $steps["updateLoadedbtn"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["loadedbtn"]
                          },
                          operation: 0,
                          value: true
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateLoadedbtn"] != null &&
                    typeof $steps["updateLoadedbtn"] === "object" &&
                    typeof $steps["updateLoadedbtn"].then === "function"
                  ) {
                    $steps["updateLoadedbtn"] = await $steps["updateLoadedbtn"];
                  }

                  $steps["updateNumber"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["number"]
                          },
                          operation: 0,
                          value: (() => {
                            if ($state.selectContry == "+98")
                              return "0" + $state.fragmentInput.value;
                            else
                              return (
                                $state.selectContry + $state.fragmentInput.value
                              );
                          })()
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateNumber"] != null &&
                    typeof $steps["updateNumber"] === "object" &&
                    typeof $steps["updateNumber"].then === "function"
                  ) {
                    $steps["updateNumber"] = await $steps["updateNumber"];
                  }

                  $steps["invokeGlobalAction2"] = true
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "POST",
                            "https://n8n.babarkat.com/webhook/Babarkat/password",
                            undefined,
                            (() => {
                              try {
                                return {
                                  mobile: $state.number,
                                  password: $state.fragmentInput3.value
                                };
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          ]
                        };
                        return $globalActions["Fragment.apiRequest"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["invokeGlobalAction2"] != null &&
                    typeof $steps["invokeGlobalAction2"] === "object" &&
                    typeof $steps["invokeGlobalAction2"].then === "function"
                  ) {
                    $steps["invokeGlobalAction2"] = await $steps[
                      "invokeGlobalAction2"
                    ];
                  }

                  $steps["invokeGlobalAction3"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === false
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "error",
                            "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0646\u0627\u062f\u0631\u0633\u062a \u0627\u0633\u062a.",
                            "top-left"
                          ]
                        };
                        return $globalActions["Fragment.showToast"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["invokeGlobalAction3"] != null &&
                    typeof $steps["invokeGlobalAction3"] === "object" &&
                    typeof $steps["invokeGlobalAction3"].then === "function"
                  ) {
                    $steps["invokeGlobalAction3"] = await $steps[
                      "invokeGlobalAction3"
                    ];
                  }

                  $steps["updateFragmentInputValue2"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === true
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return (() => {
                              localStorage.setItem(
                                "userbabarcat",
                                JSON.stringify(
                                  $steps.invokeGlobalAction2.data[0].data
                                )
                              );
                              const item = {
                                value:
                                  $steps.invokeGlobalAction2.data[0].data.token,
                                expiration:
                                  new Date().getTime() + 10 * 60 * 1000
                              };
                              return sessionStorage.setItem(
                                "userbabarcatToken",
                                JSON.stringify(item)
                              );
                            })();
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateFragmentInputValue2"] != null &&
                    typeof $steps["updateFragmentInputValue2"] === "object" &&
                    typeof $steps["updateFragmentInputValue2"].then ===
                      "function"
                  ) {
                    $steps["updateFragmentInputValue2"] = await $steps[
                      "updateFragmentInputValue2"
                    ];
                  }

                  $steps["goToHomepage"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === true
                      : false
                  )
                    ? (() => {
                        const actionArgs = { destination: `/` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToHomepage"] != null &&
                    typeof $steps["goToHomepage"] === "object" &&
                    typeof $steps["goToHomepage"].then === "function"
                  ) {
                    $steps["goToHomepage"] = await $steps["goToHomepage"];
                  }

                  $steps["updateFragmentInputValue3"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === true
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return (() => {
                              return localStorage.setItem(
                                "userBabarkatPass",
                                "true"
                              );
                            })();
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateFragmentInputValue3"] != null &&
                    typeof $steps["updateFragmentInputValue3"] === "object" &&
                    typeof $steps["updateFragmentInputValue3"].then ===
                      "function"
                  ) {
                    $steps["updateFragmentInputValue3"] = await $steps[
                      "updateFragmentInputValue3"
                    ];
                  }

                  $steps["updateFragmentInputValue4"] = (
                    $steps.invokeGlobalAction2?.data
                      ? $steps.invokeGlobalAction2?.data[0]?.success === true
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "POST",
                            "https://n8n.babarkat.com/webhook/users/logLaunch",
                            undefined,
                            (() => {
                              try {
                                return {
                                  type: "loginPassword",
                                  userToken: JSON.parse(
                                    sessionStorage.getItem("userbabarcatToken")
                                  ).value
                                };
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          ]
                        };
                        return $globalActions["Fragment.apiRequest"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["updateFragmentInputValue4"] != null &&
                    typeof $steps["updateFragmentInputValue4"] === "object" &&
                    typeof $steps["updateFragmentInputValue4"].then ===
                      "function"
                  ) {
                    $steps["updateFragmentInputValue4"] = await $steps[
                      "updateFragmentInputValue4"
                    ];
                  }

                  $steps["updateLoadedbtn2"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["loadedbtn"]
                          },
                          operation: 0,
                          value: false
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateLoadedbtn2"] != null &&
                    typeof $steps["updateLoadedbtn2"] === "object" &&
                    typeof $steps["updateLoadedbtn2"].then === "function"
                  ) {
                    $steps["updateLoadedbtn2"] = await $steps[
                      "updateLoadedbtn2"
                    ];
                  }
                }}
                onLoadingviowChange={async (...eventArgs: any) => {
                  ((...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "button3",
                      "loadingviow"
                    ])(eventArgs[0]);
                  }).apply(null, eventArgs);

                  if (
                    eventArgs.length > 1 &&
                    eventArgs[1] &&
                    eventArgs[1]._plasmic_state_init_
                  ) {
                    return;
                  }
                }}
                showEndIcon={(() => {
                  try {
                    return $state.loadedbtn;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___73Cik,
                    {
                      [sty.textgroup11_loginByPassword___73CiKe5Wtv]:
                        hasVariant($state, "group11", "loginByPassword"),
                      [sty.textgroup11_password___73CiKcxClj]: hasVariant(
                        $state,
                        "group11",
                        "password"
                      ),
                      [sty.textloginByPassword___73Cik0DikB]: hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ),
                      [sty.textpassword___73Cik8PqF9]: hasVariant(
                        $state,
                        "password",
                        "password"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "group11", "loginByPassword")
                    ? "\u0648\u0631\u0648\u062f"
                    : hasVariant($state, "group11", "password")
                    ? "\u0648\u0631\u0648\u062f"
                    : hasVariant($state, "loginByPassword", "loginByPassword")
                    ? "\u0648\u0631\u0648\u062f"
                    : hasVariant($state, "password", "password")
                    ? "\u0648\u0631\u0648\u062f"
                    : "\u0627\u0631\u0633\u0627\u0644 \u06a9\u062f \u062a\u0627\u06cc\u06cc\u062f"}
                </div>
              </Button>
              <AntdCheckbox
                data-plasmic-name={"checkbox"}
                data-plasmic-override={overrides.checkbox}
                autoFocus={
                  hasVariant($state, "group11", "saraf")
                    ? false
                    : hasVariant($state, "saraf2", "saraf2")
                    ? false
                    : undefined
                }
                checked={generateStateValueProp($state, [
                  "checkbox",
                  "checked"
                ])}
                className={classNames("__wab_instance", sty.checkbox, {
                  [sty.checkboxgroup11_password]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.checkboxgroup11_saraf]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.checkboxpassword]: hasVariant(
                    $state,
                    "password",
                    "password"
                  ),
                  [sty.checkboxpassword_group11_password]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "group11", "password"),
                  [sty.checkboxpassword_group11_saraf]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "group11", "saraf"),
                  [sty.checkboxpassword_saraf2]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.checkboxsaraf2]: hasVariant($state, "saraf2", "saraf2")
                })}
                defaultChecked={
                  hasVariant($state, "group11", "saraf")
                    ? false
                    : hasVariant($state, "saraf2", "saraf2")
                    ? true
                    : undefined
                }
                disabled={
                  hasVariant($state, "group11", "saraf")
                    ? false
                    : hasVariant($state, "saraf2", "saraf2")
                    ? false
                    : undefined
                }
                onChange={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, [
                    "checkbox",
                    "checked"
                  ]).apply(null, eventArgs);

                  (async checked => {
                    const $steps = {};

                    $steps["updateShopOpen"] =
                      $state.checkbox.checked == true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["shop", "open"]
                              },
                              operation: 4
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              const oldValue = $stateGet(objRoot, variablePath);
                              $stateSet(objRoot, variablePath, !oldValue);
                              return !oldValue;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["updateShopOpen"] != null &&
                      typeof $steps["updateShopOpen"] === "object" &&
                      typeof $steps["updateShopOpen"].then === "function"
                    ) {
                      $steps["updateShopOpen"] = await $steps["updateShopOpen"];
                    }
                  }).apply(null, eventArgs);
                }}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rPoWa,
                    {
                      [sty.textgroup11_saraf__rPoWanaBfa]: hasVariant(
                        $state,
                        "group11",
                        "saraf"
                      ),
                      [sty.textsaraf2__rPoWaJmKha]: hasVariant(
                        $state,
                        "saraf2",
                        "saraf2"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "group11", "saraf")
                    ? "\u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u0645\u0642\u0631\u0631\u0627\u062a \u0631\u0627 \u0645\u06cc\u067e\u0630\u06cc\u0631\u0645!"
                    : hasVariant($state, "saraf2", "saraf2")
                    ? "\u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u0645\u0642\u0631\u0631\u0627\u062a \u0631\u0627 \u0645\u06cc\u067e\u0630\u06cc\u0631\u0645!"
                    : "Checkbox"}
                </div>
              </AntdCheckbox>
              <Button
                data-plasmic-name={"btnSaraf"}
                data-plasmic-override={overrides.btnSaraf}
                className={classNames("__wab_instance", sty.btnSaraf, {
                  [sty.btnSarafcode2]: hasVariant($state, "code2", "code2"),
                  [sty.btnSarafcode2_group11_saraf]:
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.btnSarafcode2_saraf2]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.btnSarafgroup11_code]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.btnSarafgroup11_loginByPassword]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.btnSarafgroup11_password]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.btnSarafgroup11_saraf]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.btnSarafloginByPassword]: hasVariant(
                    $state,
                    "loginByPassword",
                    "loginByPassword"
                  ),
                  [sty.btnSarafloginByPassword_group11_password]:
                    hasVariant($state, "group11", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.btnSarafloginByPassword_group11_saraf]:
                    hasVariant($state, "group11", "saraf") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.btnSarafloginByPassword_password]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.btnSarafloginByPassword_saraf2]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "loginByPassword", "loginByPassword"),
                  [sty.btnSarafpassword]: hasVariant(
                    $state,
                    "password",
                    "password"
                  ),
                  [sty.btnSarafpassword_group11_loginByPassword]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "group11", "loginByPassword"),
                  [sty.btnSarafsaraf2]: hasVariant($state, "saraf2", "saraf2"),
                  [sty.btnSarafsaraf2_group11_code]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "code"),
                  [sty.btnSarafsaraf2_group11_loginByPassword]:
                    hasVariant($state, "saraf2", "saraf2") &&
                    hasVariant($state, "group11", "loginByPassword")
                })}
                color={"green"}
                endIcon={
                  <IconIcon
                    className={classNames(projectcss.all, sty.svg__pEfNe)}
                    role={"img"}
                  />
                }
                isDisabled={
                  hasVariant($state, "group11", "saraf") &&
                  hasVariant($state, "code2", "code2")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "group11", "code")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "code2", "code2")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "group11", "saraf")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "saraf2", "saraf2")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return (
                            $state.fragmentInput.value.length != 11 ||
                            $state.loadedbtn
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                }
                loadingviow={generateStateValueProp($state, [
                  "btnSaraf",
                  "loadingviow"
                ])}
                onClick={async event => {
                  const $steps = {};

                  $steps["updateLoadedbtn"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["loadedbtn"]
                          },
                          operation: 0,
                          value: true
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateLoadedbtn"] != null &&
                    typeof $steps["updateLoadedbtn"] === "object" &&
                    typeof $steps["updateLoadedbtn"].then === "function"
                  ) {
                    $steps["updateLoadedbtn"] = await $steps["updateLoadedbtn"];
                  }

                  $steps["updateSelectsaraf"] =
                    $state.checkbox.checked == true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["selectsaraf"]
                            },
                            operation: 0,
                            value: $state.select.value
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                  if (
                    $steps["updateSelectsaraf"] != null &&
                    typeof $steps["updateSelectsaraf"] === "object" &&
                    typeof $steps["updateSelectsaraf"].then === "function"
                  ) {
                    $steps["updateSelectsaraf"] = await $steps[
                      "updateSelectsaraf"
                    ];
                  }

                  $steps["invokeGlobalAction"] =
                    $state.checkbox.checked == true
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "POST",
                              "https://n8n.babarkat.com/webhook/Babarkat/login",
                              undefined,
                              (() => {
                                try {
                                  return {
                                    _saraf: $state.selectsaraf,
                                    userToken: JSON.parse(
                                      sessionStorage.getItem(
                                        "userbabarcatToken"
                                      )
                                    ).value
                                  };
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            ]
                          };
                          return $globalActions["Fragment.apiRequest"]?.apply(
                            null,
                            [...actionArgs.args]
                          );
                        })()
                      : undefined;
                  if (
                    $steps["invokeGlobalAction"] != null &&
                    typeof $steps["invokeGlobalAction"] === "object" &&
                    typeof $steps["invokeGlobalAction"].then === "function"
                  ) {
                    $steps["invokeGlobalAction"] = await $steps[
                      "invokeGlobalAction"
                    ];
                  }

                  $steps["invokeGlobalAction2"] = (
                    $steps.invokeGlobalAction?.data
                      ? $steps.invokeGlobalAction?.data[0]?.success == false
                      : true && $state.checkbox.checked == true
                  )
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "error",
                            "\u0645\u0634\u06a9\u0644\u06cc \u0631\u062e \u062f\u0627\u062f\u0647 \u0627\u0633\u062a \u0645\u062c\u062f\u062f\u0627 \u062a\u0644\u0627\u0634 \u06a9\u0646\u06cc\u062f.",
                            "top-left"
                          ]
                        };
                        return $globalActions["Fragment.showToast"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["invokeGlobalAction2"] != null &&
                    typeof $steps["invokeGlobalAction2"] === "object" &&
                    typeof $steps["invokeGlobalAction2"].then === "function"
                  ) {
                    $steps["invokeGlobalAction2"] = await $steps[
                      "invokeGlobalAction2"
                    ];
                  }

                  $steps["runCode"] = (
                    $steps.invokeGlobalAction?.data
                      ? $steps.invokeGlobalAction?.data[0]?.success == true
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return (() => {
                              localStorage.setItem(
                                "userbabarcat",
                                JSON.stringify(
                                  $steps.invokeGlobalAction.data[0].data
                                )
                              );
                              const item = {
                                value:
                                  $steps.invokeGlobalAction.data[0].data.token,
                                expiration:
                                  new Date().getTime() + 10 * 60 * 1000
                              };
                              return sessionStorage.setItem(
                                "userbabarcatToken",
                                JSON.stringify(item)
                              );
                            })();
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["runCode"] != null &&
                    typeof $steps["runCode"] === "object" &&
                    typeof $steps["runCode"].then === "function"
                  ) {
                    $steps["runCode"] = await $steps["runCode"];
                  }

                  $steps["goToHomepage"] = (
                    $steps.invokeGlobalAction?.data
                      ? $steps.invokeGlobalAction?.data[0]?.success == true
                      : false
                  )
                    ? (() => {
                        const actionArgs = { destination: `/` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToHomepage"] != null &&
                    typeof $steps["goToHomepage"] === "object" &&
                    typeof $steps["goToHomepage"].then === "function"
                  ) {
                    $steps["goToHomepage"] = await $steps["goToHomepage"];
                  }

                  $steps["invokeGlobalAction3"] = (
                    $steps.invokeGlobalAction?.data
                      ? $steps.invokeGlobalAction?.data[0]?.success == true
                      : false
                  )
                    ? (() => {
                        const actionArgs = {
                          args: [
                            "POST",
                            "https://n8n.babarkat.com/webhook/users/logLaunch",
                            undefined,
                            (() => {
                              try {
                                return {
                                  type: "loginSms",
                                  userToken: JSON.parse(
                                    sessionStorage.getItem("userbabarcatToken")
                                  ).value
                                };
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          ]
                        };
                        return $globalActions["Fragment.apiRequest"]?.apply(
                          null,
                          [...actionArgs.args]
                        );
                      })()
                    : undefined;
                  if (
                    $steps["invokeGlobalAction3"] != null &&
                    typeof $steps["invokeGlobalAction3"] === "object" &&
                    typeof $steps["invokeGlobalAction3"].then === "function"
                  ) {
                    $steps["invokeGlobalAction3"] = await $steps[
                      "invokeGlobalAction3"
                    ];
                  }

                  $steps["updateLoadedbtn2"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["loadedbtn"]
                          },
                          operation: 0,
                          value: false
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateLoadedbtn2"] != null &&
                    typeof $steps["updateLoadedbtn2"] === "object" &&
                    typeof $steps["updateLoadedbtn2"].then === "function"
                  ) {
                    $steps["updateLoadedbtn2"] = await $steps[
                      "updateLoadedbtn2"
                    ];
                  }

                  $steps["invokeGlobalAction4"] =
                    $state.checkbox.checked == false
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "error",
                              "\u0644\u0637\u0641\u0627 \u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u0645\u0642\u0631\u0631\u0627\u062a \u0631\u0627 \u062a\u0627\u06cc\u06cc\u062f \u06a9\u0646\u06cc\u062f.",
                              "top-left"
                            ]
                          };
                          return $globalActions["Fragment.showToast"]?.apply(
                            null,
                            [...actionArgs.args]
                          );
                        })()
                      : undefined;
                  if (
                    $steps["invokeGlobalAction4"] != null &&
                    typeof $steps["invokeGlobalAction4"] === "object" &&
                    typeof $steps["invokeGlobalAction4"].then === "function"
                  ) {
                    $steps["invokeGlobalAction4"] = await $steps[
                      "invokeGlobalAction4"
                    ];
                  }
                }}
                onLoadingviowChange={async (...eventArgs: any) => {
                  ((...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "btnSaraf",
                      "loadingviow"
                    ])(eventArgs[0]);
                  }).apply(null, eventArgs);

                  if (
                    eventArgs.length > 1 &&
                    eventArgs[1] &&
                    eventArgs[1]._plasmic_state_init_
                  ) {
                    return;
                  }
                }}
                showEndIcon={
                  hasVariant($state, "group11", "saraf") &&
                  hasVariant($state, "code2", "code2")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "group11", "code")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "code2", "code2")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "group11", "saraf")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "saraf2", "saraf2")
                    ? (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return $state.loadedbtn;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                }
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uxobw,
                    {
                      [sty.textgroup11_saraf__uxobwnaBfa]: hasVariant(
                        $state,
                        "group11",
                        "saraf"
                      ),
                      [sty.textsaraf2__uxobwJmKha]: hasVariant(
                        $state,
                        "saraf2",
                        "saraf2"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "group11", "saraf")
                    ? "\u062a\u0627\u06cc\u06cc\u062f"
                    : hasVariant($state, "saraf2", "saraf2")
                    ? "\u062a\u0627\u06cc\u06cc\u062f"
                    : "\u0627\u0631\u0633\u0627\u0644 \u06a9\u062f \u062a\u0627\u06cc\u06cc\u062f"}
                </div>
              </Button>
              {(
                hasVariant($state, "group11", "code")
                  ? true
                  : hasVariant($state, "code2", "code2")
                  ? true
                  : false
              ) ? (
                <Button
                  data-plasmic-name={"sendcode"}
                  data-plasmic-override={overrides.sendcode}
                  className={classNames("__wab_instance", sty.sendcode, {
                    [sty.sendcodecode2]: hasVariant($state, "code2", "code2"),
                    [sty.sendcodecode2_group11_code]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "group11", "code"),
                    [sty.sendcodecode2_group11_loginByPassword]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "group11", "loginByPassword"),
                    [sty.sendcodecode2_group11_saraf]:
                      hasVariant($state, "group11", "saraf") &&
                      hasVariant($state, "code2", "code2"),
                    [sty.sendcodecode2_saraf2]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "code2", "code2"),
                    [sty.sendcodegroup11_code]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.sendcodegroup11_loginByPassword]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.sendcodegroup11_password]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.sendcodegroup11_saraf]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.sendcodeloginByPassword]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.sendcodeloginByPassword_code2]:
                      hasVariant($state, "code2", "code2") &&
                      hasVariant($state, "loginByPassword", "loginByPassword"),
                    [sty.sendcodeloginByPassword_group11_code]:
                      hasVariant($state, "group11", "code") &&
                      hasVariant($state, "loginByPassword", "loginByPassword"),
                    [sty.sendcodeloginByPassword_group11_saraf]:
                      hasVariant($state, "group11", "saraf") &&
                      hasVariant($state, "loginByPassword", "loginByPassword"),
                    [sty.sendcodeloginByPassword_saraf2]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "loginByPassword", "loginByPassword"),
                    [sty.sendcodepassword]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.sendcodepassword_group11_saraf]:
                      hasVariant($state, "group11", "saraf") &&
                      hasVariant($state, "password", "password"),
                    [sty.sendcodepassword_saraf2]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "password", "password"),
                    [sty.sendcodesaraf2]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    ),
                    [sty.sendcodesaraf2_group11_code]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "group11", "code"),
                    [sty.sendcodesaraf2_group11_loginByPassword]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "group11", "loginByPassword"),
                    [sty.sendcodesaraf2_group11_password]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "group11", "password")
                  })}
                  color={"green"}
                  endIcon={
                    <PlasmicIcon__
                      PlasmicIconType={
                        hasVariant($state, "group11", "code")
                          ? IconIcon
                          : hasVariant($state, "code2", "code2")
                          ? IconIcon
                          : Icon3Icon
                      }
                      className={classNames(projectcss.all, sty.svg__r6GXo, {
                        [sty.svgcode2__r6GXoDv9B5]: hasVariant(
                          $state,
                          "code2",
                          "code2"
                        ),
                        [sty.svggroup11_code__r6GXoYss9U]: hasVariant(
                          $state,
                          "group11",
                          "code"
                        )
                      })}
                      role={"img"}
                    />
                  }
                  isDisabled={
                    hasVariant($state, "group11", "code") &&
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? (() => {
                          try {
                            return $state.fragmentInput2.value.length != 4;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "group11", "code")
                      ? (() => {
                          try {
                            return $state.fragmentInput2.value.length != 4;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "code2", "code2") &&
                        hasVariant(globalVariants, "screen", "mobileOnly")
                      ? (() => {
                          try {
                            return $state.fragmentInput2.value.length != 4;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "code2", "code2")
                      ? (() => {
                          try {
                            return $state.fragmentInput2.value.length != 4;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()
                      : (() => {
                          try {
                            return $state.fragmentInput2.value.length != 11;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()
                  }
                  loadingviow={generateStateValueProp($state, [
                    "sendcode",
                    "loadingviow"
                  ])}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateLoadedbtn"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["loadedbtn"]
                            },
                            operation: 0,
                            value: true
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateLoadedbtn"] != null &&
                      typeof $steps["updateLoadedbtn"] === "object" &&
                      typeof $steps["updateLoadedbtn"].then === "function"
                    ) {
                      $steps["updateLoadedbtn"] = await $steps[
                        "updateLoadedbtn"
                      ];
                    }

                    $steps["updateCode"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["code"]
                            },
                            operation: 0,
                            value: parseInt($state.fragmentInput2.value)
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateCode"] != null &&
                      typeof $steps["updateCode"] === "object" &&
                      typeof $steps["updateCode"].then === "function"
                    ) {
                      $steps["updateCode"] = await $steps["updateCode"];
                    }

                    $steps["invokeGlobalAction2"] = true
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "POST",
                              "https://n8n.babarkat.com/webhook/Babarkat/login",
                              undefined,
                              (() => {
                                try {
                                  return {
                                    mobile: $state.number,
                                    code: $state.code
                                  };
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            ]
                          };
                          return $globalActions["Fragment.apiRequest"]?.apply(
                            null,
                            [...actionArgs.args]
                          );
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction2"] != null &&
                      typeof $steps["invokeGlobalAction2"] === "object" &&
                      typeof $steps["invokeGlobalAction2"].then === "function"
                    ) {
                      $steps["invokeGlobalAction2"] = await $steps[
                        "invokeGlobalAction2"
                      ];
                    }

                    $steps["invokeGlobalAction"] = (
                      $steps.invokeGlobalAction2?.data
                        ? $steps.invokeGlobalAction2?.data[0]?.success == false
                        : false
                    )
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "error",
                              "\u06a9\u062f \u0648\u0627\u0631\u062f \u0634\u062f\u0647 \u0635\u062d\u06cc\u062d \u0646\u0645\u06cc \u0628\u0627\u0634\u062f.",
                              "top-left"
                            ]
                          };
                          return $globalActions["Fragment.showToast"]?.apply(
                            null,
                            [...actionArgs.args]
                          );
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }

                    $steps["runCode"] = (
                      $steps.invokeGlobalAction2?.data
                        ? $steps.invokeGlobalAction2?.data[0]?.success == true
                        : false
                    )
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                localStorage.setItem(
                                  "userbabarcat",
                                  JSON.stringify(
                                    $steps.invokeGlobalAction2.data[0].data
                                  )
                                );
                                const item = {
                                  value:
                                    $steps.invokeGlobalAction2.data[0].data
                                      .token,
                                  expiration:
                                    new Date().getTime() + 10 * 60 * 1000
                                };
                                return sessionStorage.setItem(
                                  "userbabarcatToken",
                                  JSON.stringify(item)
                                );
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }

                    $steps["invokeGlobalAction3"] = (
                      $steps.invokeGlobalAction2?.data
                        ? $steps.invokeGlobalAction2?.data[0]?.success == false
                        : true
                    )
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "error",
                              "\u0645\u0634\u06a9\u0644\u06cc \u0631\u062e \u062f\u0627\u062f\u0647 \u0627\u0633\u062a \u0645\u062c\u062f\u062f\u0627 \u062a\u0644\u0627\u0634 \u06a9\u0646\u06cc\u062f.",
                              "top-left"
                            ]
                          };
                          return $globalActions["Fragment.showToast"]?.apply(
                            null,
                            [...actionArgs.args]
                          );
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction3"] != null &&
                      typeof $steps["invokeGlobalAction3"] === "object" &&
                      typeof $steps["invokeGlobalAction3"].then === "function"
                    ) {
                      $steps["invokeGlobalAction3"] = await $steps[
                        "invokeGlobalAction3"
                      ];
                    }

                    $steps["goToHomepage"] = (
                      $steps.invokeGlobalAction2?.data
                        ? $steps.invokeGlobalAction2?.data[0]?.success ==
                            true &&
                          $steps.invokeGlobalAction2?.data[0]?.saraf.length < 2
                        : false
                    )
                      ? (() => {
                          const actionArgs = { destination: `/` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHomepage"] != null &&
                      typeof $steps["goToHomepage"] === "object" &&
                      typeof $steps["goToHomepage"].then === "function"
                    ) {
                      $steps["goToHomepage"] = await $steps["goToHomepage"];
                    }

                    $steps["updateSaraf"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["saraf"]
                            },
                            operation: 0,
                            value: (() => {
                              const transformedArray =
                                $steps.invokeGlobalAction2.data[0].saraf.map(
                                  item => ({
                                    label: item.name,
                                    value: item.id
                                  })
                                );
                              return transformedArray;
                            })()
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateSaraf"] != null &&
                      typeof $steps["updateSaraf"] === "object" &&
                      typeof $steps["updateSaraf"].then === "function"
                    ) {
                      $steps["updateSaraf"] = await $steps["updateSaraf"];
                    }

                    $steps["updateUnnamedVariant2"] = (
                      $steps.invokeGlobalAction2?.data
                        ? $steps.invokeGlobalAction2?.data[0]?.success ===
                            true && $state.saraf.length > 1
                        : false
                    )
                      ? (() => {
                          const actionArgs = {
                            vgroup: "group11",
                            operation: 0,
                            value: "saraf"
                          };
                          return (({ vgroup, value }) => {
                            if (typeof value === "string") {
                              value = [value];
                            }

                            $stateSet($state, vgroup, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateUnnamedVariant2"] != null &&
                      typeof $steps["updateUnnamedVariant2"] === "object" &&
                      typeof $steps["updateUnnamedVariant2"].then === "function"
                    ) {
                      $steps["updateUnnamedVariant2"] = await $steps[
                        "updateUnnamedVariant2"
                      ];
                    }

                    $steps["updateLoadedbtn2"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["loadedbtn"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateLoadedbtn2"] != null &&
                      typeof $steps["updateLoadedbtn2"] === "object" &&
                      typeof $steps["updateLoadedbtn2"].then === "function"
                    ) {
                      $steps["updateLoadedbtn2"] = await $steps[
                        "updateLoadedbtn2"
                      ];
                    }
                  }}
                  onLoadingviowChange={async (...eventArgs: any) => {
                    ((...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "sendcode",
                        "loadingviow"
                      ])(eventArgs[0]);
                    }).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  showEndIcon={(() => {
                    try {
                      return $state.loadedbtn;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sE8Bl,
                      {
                        [sty.textcode2__sE8BlDv9B5]: hasVariant(
                          $state,
                          "code2",
                          "code2"
                        ),
                        [sty.textgroup11_code__sE8BlYss9U]: hasVariant(
                          $state,
                          "group11",
                          "code"
                        )
                      }
                    )}
                  >
                    {"\u062a\u0627\u06cc\u06cc\u062f"}
                  </div>
                </Button>
              ) : null}
            </div>
            {(
              hasVariant($state, "group11", "code")
                ? true
                : hasVariant($state, "code2", "code2")
                ? true
                : false
            ) ? (
              <div
                data-plasmic-name={"figmaPaste"}
                data-plasmic-override={overrides.figmaPaste}
                className={classNames(projectcss.all, sty.figmaPaste, {
                  [sty.figmaPastecode2]: hasVariant($state, "code2", "code2"),
                  [sty.figmaPastegroup11_code]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  )
                })}
              >
                <div
                  data-plasmic-name={"group"}
                  data-plasmic-override={overrides.group}
                  className={classNames(projectcss.all, sty.group, {
                    [sty.groupcode2]: hasVariant($state, "code2", "code2"),
                    [sty.groupgroup11_code]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    )
                  })}
                >
                  <div
                    data-plasmic-name={"group2"}
                    data-plasmic-override={overrides.group2}
                    className={classNames(projectcss.all, sty.group2)}
                  >
                    <div
                      data-plasmic-name={"rectangle35"}
                      data-plasmic-override={overrides.rectangle35}
                      className={classNames(projectcss.all, sty.rectangle35)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ts1J3
                      )}
                    >
                      {"\u0627\u062f\u0627\u0645\u0647"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"group3"}
                    data-plasmic-override={overrides.group3}
                    className={classNames(projectcss.all, sty.group3, {
                      [sty.group3code2]: hasVariant($state, "code2", "code2"),
                      [sty.group3group11_code]: hasVariant(
                        $state,
                        "group11",
                        "code"
                      )
                    })}
                  >
                    <div
                      data-plasmic-name={"group4"}
                      data-plasmic-override={overrides.group4}
                      className={classNames(projectcss.all, sty.group4)}
                    >
                      <div
                        data-plasmic-name={"rectangle23"}
                        data-plasmic-override={overrides.rectangle23}
                        className={classNames(projectcss.all, sty.rectangle23)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qUrvt
                        )}
                      >
                        {"1"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"group5"}
                      data-plasmic-override={overrides.group5}
                      className={classNames(projectcss.all, sty.group5)}
                    >
                      <div
                        data-plasmic-name={"rectangle24"}
                        data-plasmic-override={overrides.rectangle24}
                        className={classNames(projectcss.all, sty.rectangle24)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uiopE
                        )}
                      >
                        {"2"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"group6"}
                      data-plasmic-override={overrides.group6}
                      className={classNames(projectcss.all, sty.group6)}
                    >
                      <div
                        data-plasmic-name={"rectangle25"}
                        data-plasmic-override={overrides.rectangle25}
                        className={classNames(projectcss.all, sty.rectangle25)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1BLr3
                        )}
                      >
                        {"3"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"group7"}
                      data-plasmic-override={overrides.group7}
                      className={classNames(projectcss.all, sty.group7)}
                    >
                      <div
                        data-plasmic-name={"rectangle"}
                        data-plasmic-override={overrides.rectangle}
                        className={classNames(projectcss.all, sty.rectangle, {
                          [sty.rectanglecode2]: hasVariant(
                            $state,
                            "code2",
                            "code2"
                          ),
                          [sty.rectanglegroup11_code]: hasVariant(
                            $state,
                            "group11",
                            "code"
                          )
                        })}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3Wq9D
                        )}
                      >
                        {"4"}
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oDmNk,
                      {
                        [sty.textcode2__oDmNkDv9B5]: hasVariant(
                          $state,
                          "code2",
                          "code2"
                        ),
                        [sty.textgroup11_code__oDmNkYss9U]: hasVariant(
                          $state,
                          "group11",
                          "code"
                        )
                      }
                    )}
                  >
                    {
                      "\u0644\u0637\u0641\u0627 \u06a9\u062f 4 \u0631\u0642\u0645\u06cc \u0627\u0631\u0633\u0627\u0644 \u0634\u062f\u0647 \u0628\u0647 \u0634\u0645\u0627\u0631\u0647 \u0632\u06cc\u0631 \u0631\u0627 \u0648\u0627\u0631\u062f \u0646\u0645\u0627\u06cc\u06cc\u062f."
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7SctQ,
                      {
                        [sty.textcode2___7SctQDv9B5]: hasVariant(
                          $state,
                          "code2",
                          "code2"
                        ),
                        [sty.textgroup11_code___7SctQYss9U]: hasVariant(
                          $state,
                          "group11",
                          "code"
                        )
                      }
                    )}
                  >
                    {
                      "\u06a9\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"group8"}
                  data-plasmic-override={overrides.group8}
                  className={classNames(projectcss.all, sty.group8)}
                />
              </div>
            ) : null}
            <div
              data-plasmic-name={"group9"}
              data-plasmic-override={overrides.group9}
              className={classNames(projectcss.all, sty.group9, {
                [sty.group9code2]: hasVariant($state, "code2", "code2"),
                [sty.group9code2_group11_password]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "password"),
                [sty.group9code2_group11_saraf]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "saraf"),
                [sty.group9code2_saraf2]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group9group11_code]: hasVariant($state, "group11", "code"),
                [sty.group9group11_loginByPassword]: hasVariant(
                  $state,
                  "group11",
                  "loginByPassword"
                ),
                [sty.group9group11_password]: hasVariant(
                  $state,
                  "group11",
                  "password"
                ),
                [sty.group9group11_saraf]: hasVariant(
                  $state,
                  "group11",
                  "saraf"
                ),
                [sty.group9loginByPassword]: hasVariant(
                  $state,
                  "loginByPassword",
                  "loginByPassword"
                ),
                [sty.group9loginByPassword_group11_saraf]:
                  hasVariant($state, "loginByPassword", "loginByPassword") &&
                  hasVariant($state, "group11", "saraf"),
                [sty.group9loginByPassword_saraf2]:
                  hasVariant($state, "loginByPassword", "loginByPassword") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group9password]: hasVariant(
                  $state,
                  "password",
                  "password"
                ),
                [sty.group9password_code2]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "password", "password"),
                [sty.group9password_group11_code]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "password", "password"),
                [sty.group9password_group11_saraf]:
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "group11", "saraf"),
                [sty.group9password_saraf2]:
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group9saraf2]: hasVariant($state, "saraf2", "saraf2"),
                [sty.group9saraf2_group11_code]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group9saraf2_group11_loginByPassword]:
                  hasVariant($state, "group11", "loginByPassword") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group9saraf2_group11_password]:
                  hasVariant($state, "group11", "password") &&
                  hasVariant($state, "saraf2", "saraf2")
              })}
              onClick={async event => {
                const $steps = {};

                $steps["updateGroup11"] = true
                  ? (() => {
                      const actionArgs = {
                        vgroup: "group11",
                        operation: 1,
                        value: "loginByPassword"
                      };
                      return (({ vgroup, value }) => {
                        if (typeof value === "string") {
                          value = [value];
                        }

                        $stateSet($state, vgroup, undefined);
                        return undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateGroup11"] != null &&
                  typeof $steps["updateGroup11"] === "object" &&
                  typeof $steps["updateGroup11"].then === "function"
                ) {
                  $steps["updateGroup11"] = await $steps["updateGroup11"];
                }
              }}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wYgld,
                  {
                    [sty.textcode2__wYgldDv9B5]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.textcode2_group11_saraf__wYgldDv9B5NaBfa]:
                      hasVariant($state, "group11", "saraf") &&
                      hasVariant($state, "code2", "code2"),
                    [sty.textcode2_saraf2__wYgldDv9B5JmKha]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "code2", "code2"),
                    [sty.textgroup11_code__wYgldYss9U]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.textgroup11_loginByPassword__wYglde5Wtv]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.textgroup11_password__wYgldcxClj]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.textgroup11_saraf__wYgldnaBfa]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.textloginByPassword__wYgld0DikB]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.textloginByPassword_group11_saraf__wYgld0DikBNaBfa]:
                      hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ) && hasVariant($state, "group11", "saraf"),
                    [sty.textloginByPassword_saraf2__wYgld0DikBJmKha]:
                      hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ) && hasVariant($state, "saraf2", "saraf2"),
                    [sty.textpassword__wYgld8PqF9]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.textpassword_group11_saraf__wYgld8PqF9NaBfa]:
                      hasVariant($state, "password", "password") &&
                      hasVariant($state, "group11", "saraf"),
                    [sty.textpassword_saraf2__wYgld8PqF9JmKha]:
                      hasVariant($state, "password", "password") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.textsaraf2__wYgldJmKha]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    ),
                    [sty.textsaraf2_group11_code__wYgldJmKhaYss9U]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "group11", "code"),
                    [sty.textsaraf2_group11_loginByPassword__wYgldJmKhaE5Wtv]:
                      hasVariant($state, "group11", "loginByPassword") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.textsaraf2_group11_password__wYgldJmKhaCxClj]:
                      hasVariant($state, "group11", "password") &&
                      hasVariant($state, "saraf2", "saraf2")
                  }
                )}
              >
                {hasVariant($state, "loginByPassword", "loginByPassword")
                  ? "\u0648\u0631\u0648\u062f \u0628\u0627 \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"
                  : hasVariant($state, "password", "password")
                  ? "\u0648\u0631\u0648\u062f \u0628\u0627 \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"
                  : "\u0627\u0635\u0644\u0627\u062d \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"}
              </div>
              <LeftArrowBackSvgrepoComSvgIcon
                className={classNames(projectcss.all, sty.svg___40A0, {
                  [sty.svgcode2___40A0Dv9B5]: hasVariant(
                    $state,
                    "code2",
                    "code2"
                  ),
                  [sty.svggroup11_code___40A0Yss9U]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.svggroup11_loginByPassword___40A0E5Wtv]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.svggroup11_password___40A0CxClj]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.svggroup11_saraf___40A0NaBfa]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.svgloginByPassword_group11_saraf___40A00DikBNaBfa]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "group11", "saraf"),
                  [sty.svgloginByPassword_saraf2___40A00DikBJmKha]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgpassword_group11_saraf___40A08PqF9NaBfa]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "group11", "saraf"),
                  [sty.svgpassword_saraf2___40A08PqF9JmKha]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgsaraf2_group11_loginByPassword___40A0JmKhaE5Wtv]:
                    hasVariant($state, "group11", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgsaraf2_group11_password___40A0JmKhaCxClj]:
                    hasVariant($state, "group11", "password") &&
                    hasVariant($state, "saraf2", "saraf2")
                })}
                role={"img"}
              />
            </div>
            <div
              data-plasmic-name={"group10"}
              data-plasmic-override={overrides.group10}
              className={classNames(projectcss.all, sty.group10, {
                [sty.group10code2]: hasVariant($state, "code2", "code2"),
                [sty.group10code2_group11_loginByPassword]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "loginByPassword"),
                [sty.group10code2_group11_saraf]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "saraf"),
                [sty.group10code2_saraf2]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group10group11_code]: hasVariant(
                  $state,
                  "group11",
                  "code"
                ),
                [sty.group10group11_loginByPassword]: hasVariant(
                  $state,
                  "group11",
                  "loginByPassword"
                ),
                [sty.group10group11_password]: hasVariant(
                  $state,
                  "group11",
                  "password"
                ),
                [sty.group10group11_saraf]: hasVariant(
                  $state,
                  "group11",
                  "saraf"
                ),
                [sty.group10loginByPassword]: hasVariant(
                  $state,
                  "loginByPassword",
                  "loginByPassword"
                ),
                [sty.group10loginByPassword_code2]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.group10loginByPassword_group11_code]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.group10loginByPassword_group11_password]:
                  hasVariant($state, "group11", "password") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.group10loginByPassword_group11_saraf]:
                  hasVariant($state, "loginByPassword", "loginByPassword") &&
                  hasVariant($state, "group11", "saraf"),
                [sty.group10loginByPassword_password]:
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.group10loginByPassword_saraf2]:
                  hasVariant($state, "loginByPassword", "loginByPassword") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group10password]: hasVariant(
                  $state,
                  "password",
                  "password"
                ),
                [sty.group10password_group11_loginByPassword]:
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "group11", "loginByPassword"),
                [sty.group10password_group11_saraf]:
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "group11", "saraf"),
                [sty.group10password_saraf2]:
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group10saraf2]: hasVariant($state, "saraf2", "saraf2"),
                [sty.group10saraf2_group11_code]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group10saraf2_group11_loginByPassword]:
                  hasVariant($state, "group11", "loginByPassword") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.group10saraf2_group11_password]:
                  hasVariant($state, "group11", "password") &&
                  hasVariant($state, "saraf2", "saraf2")
              })}
              onClick={async event => {
                const $steps = {};

                $steps["updateUnnamedVariant"] = true
                  ? (() => {
                      const actionArgs = {
                        vgroup: "group11",
                        operation: 1,
                        value: []
                      };
                      return (({ vgroup, value }) => {
                        if (typeof value === "string") {
                          value = [value];
                        }

                        $stateSet($state, vgroup, undefined);
                        return undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateUnnamedVariant"] != null &&
                  typeof $steps["updateUnnamedVariant"] === "object" &&
                  typeof $steps["updateUnnamedVariant"].then === "function"
                ) {
                  $steps["updateUnnamedVariant"] = await $steps[
                    "updateUnnamedVariant"
                  ];
                }
              }}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__agfv,
                  {
                    [sty.textcode2__agfvDv9B5]: hasVariant(
                      $state,
                      "code2",
                      "code2"
                    ),
                    [sty.textcode2_group11_saraf__agfvDv9B5NaBfa]:
                      hasVariant($state, "group11", "saraf") &&
                      hasVariant($state, "code2", "code2"),
                    [sty.textcode2_saraf2__agfvDv9B5JmKha]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "code2", "code2"),
                    [sty.textgroup11_code__agfvYss9U]: hasVariant(
                      $state,
                      "group11",
                      "code"
                    ),
                    [sty.textgroup11_loginByPassword__agfVe5Wtv]: hasVariant(
                      $state,
                      "group11",
                      "loginByPassword"
                    ),
                    [sty.textgroup11_password__agfVcxClj]: hasVariant(
                      $state,
                      "group11",
                      "password"
                    ),
                    [sty.textgroup11_saraf__agfVnaBfa]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    ),
                    [sty.textloginByPassword__agfv0DikB]: hasVariant(
                      $state,
                      "loginByPassword",
                      "loginByPassword"
                    ),
                    [sty.textloginByPassword_group11_saraf__agfv0DikBNaBfa]:
                      hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ) && hasVariant($state, "group11", "saraf"),
                    [sty.textloginByPassword_saraf2__agfv0DikBJmKha]:
                      hasVariant(
                        $state,
                        "loginByPassword",
                        "loginByPassword"
                      ) && hasVariant($state, "saraf2", "saraf2"),
                    [sty.textpassword__agfv8PqF9]: hasVariant(
                      $state,
                      "password",
                      "password"
                    ),
                    [sty.textpassword_group11_saraf__agfv8PqF9NaBfa]:
                      hasVariant($state, "password", "password") &&
                      hasVariant($state, "group11", "saraf"),
                    [sty.textpassword_saraf2__agfv8PqF9JmKha]:
                      hasVariant($state, "password", "password") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.textsaraf2__agfvJmKha]: hasVariant(
                      $state,
                      "saraf2",
                      "saraf2"
                    ),
                    [sty.textsaraf2_group11_code__agfvJmKhaYss9U]:
                      hasVariant($state, "saraf2", "saraf2") &&
                      hasVariant($state, "group11", "code"),
                    [sty.textsaraf2_group11_loginByPassword__agfvJmKhaE5Wtv]:
                      hasVariant($state, "group11", "loginByPassword") &&
                      hasVariant($state, "saraf2", "saraf2"),
                    [sty.textsaraf2_group11_password__agfvJmKhaCxClj]:
                      hasVariant($state, "group11", "password") &&
                      hasVariant($state, "saraf2", "saraf2")
                  }
                )}
              >
                {hasVariant($state, "loginByPassword", "loginByPassword")
                  ? "\u0648\u0631\u0648\u062f \u0628\u0627 \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"
                  : hasVariant($state, "password", "password")
                  ? "\u0648\u0631\u0648\u062f \u0628\u0627 \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"
                  : "\u0627\u0635\u0644\u0627\u062d \u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"}
              </div>
              <LeftArrowBackSvgrepoComSvgIcon
                className={classNames(projectcss.all, sty.svg__hTSxw, {
                  [sty.svgcode2__hTSxwDv9B5]: hasVariant(
                    $state,
                    "code2",
                    "code2"
                  ),
                  [sty.svggroup11_code__hTSxwYss9U]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.svggroup11_loginByPassword__hTSxwe5Wtv]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.svggroup11_password__hTSxwcxClj]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.svgloginByPassword_group11_saraf__hTSxw0DikBNaBfa]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "group11", "saraf"),
                  [sty.svgloginByPassword_saraf2__hTSxw0DikBJmKha]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgpassword_group11_saraf__hTSxw8PqF9NaBfa]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "group11", "saraf"),
                  [sty.svgpassword_saraf2__hTSxw8PqF9JmKha]:
                    hasVariant($state, "password", "password") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgsaraf2_group11_loginByPassword__hTSxwJmKhaE5Wtv]:
                    hasVariant($state, "group11", "loginByPassword") &&
                    hasVariant($state, "saraf2", "saraf2"),
                  [sty.svgsaraf2_group11_password__hTSxwJmKhaCxClj]:
                    hasVariant($state, "group11", "password") &&
                    hasVariant($state, "saraf2", "saraf2")
                })}
                role={"img"}
              />
            </div>
          </div>
        </Reveal>
        <div
          className={classNames(projectcss.all, sty.freeBox__nlgu0, {
            [sty.freeBoxcode2__nlgu0Dv9B5]: hasVariant(
              $state,
              "code2",
              "code2"
            ),
            [sty.freeBoxgroup11_code__nlgu0Yss9U]: hasVariant(
              $state,
              "group11",
              "code"
            )
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__dO1PX)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___6WuZh)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "80px"
                  : "150px"
              }
              loading={"lazy"}
              src={{
                src: "/plasmic/babarkat/images/image10.svg",
                fullWidth: 100,
                fullHeight: 100,
                aspectRatio: 1
              }}
            />
          </div>
        </div>
        {false ? (
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__hdnt5)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: "/plasmic/babarkat/images/image8.png",
              fullWidth: 390,
              fullHeight: 533,
              aspectRatio: undefined
            }}
          />
        ) : null}
        <Embed
          data-plasmic-name={"embedHtml"}
          data-plasmic-override={overrides.embedHtml}
          className={classNames("__wab_instance", sty.embedHtml, {
            [sty.embedHtmlcode2]: hasVariant($state, "code2", "code2"),
            [sty.embedHtmlgroup11_code]: hasVariant($state, "group11", "code"),
            [sty.embedHtmlgroup11_loginByPassword]: hasVariant(
              $state,
              "group11",
              "loginByPassword"
            ),
            [sty.embedHtmlloginByPassword]: hasVariant(
              $state,
              "loginByPassword",
              "loginByPassword"
            )
          })}
          code={
            hasVariant($state, "group11", "loginByPassword")
              ? "<script>\r\n    const myElement = document.querySelector('.logoLogin');\r\n    let initialHeight = window.innerHeight;\r\n\r\n    window.addEventListener('resize', () => {\r\n        if (window.innerHeight < initialHeight * (2 / 3)) {\r\n            myElement.style.display = 'none';\r\n        } else {\r\n            myElement.style.display = 'block';\r\n        }\r\n    });\r\n</script>\r\n"
              : hasVariant($state, "group11", "code")
              ? "  <script>\r\n        const myElement = document.getElementById('logoLogin');\r\n        let initialHeight = window.innerHeight;\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerHeight < initialHeight * (2 / 3)) {\r\n              console.log(\"\u0627\u0644\u0627\u0646\");\r\n                myElement.style.display = 'none';\r\n            } else {\r\n                myElement.style.display = 'block';\r\n            }\r\n        });\r\n    </script>"
              : hasVariant($state, "loginByPassword", "loginByPassword")
              ? "<script>\r\n    const myElement = document.querySelector('.logoLogin');\r\n    let initialHeight = window.innerHeight;\r\n\r\n    window.addEventListener('resize', () => {\r\n        if (window.innerHeight < initialHeight * (2 / 3)) {\r\n            myElement.style.display = 'none';\r\n        } else {\r\n            myElement.style.display = 'block';\r\n        }\r\n    });\r\n</script>\r\n"
              : hasVariant($state, "code2", "code2")
              ? "  <script>\r\n        const myElement = document.getElementById('logoLogin');\r\n        let initialHeight = window.innerHeight;\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerHeight < initialHeight * (2 / 3)) {\r\n              console.log(\"\u0627\u0644\u0627\u0646\");\r\n                myElement.style.display = 'none';\r\n            } else {\r\n                myElement.style.display = 'block';\r\n            }\r\n        });\r\n    </script>"
              : "  <script>\r\n          var initialHeight = window.innerHeight;\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerHeight < initialHeight * (2 / 3)) {\r\n                        document.getElementById('logoLogin').style.display = 'none';\r\n            } else {\r\n                        document.getElementById('logoLogin').style.display = 'block';\r\n            }\r\n        });\r\n    </script>"
          }
        />

        <SideEffect
          data-plasmic-name={"sideEffect"}
          data-plasmic-override={overrides.sideEffect}
          className={classNames("__wab_instance", sty.sideEffect)}
          onMount={async () => {
            const $steps = {};

            $steps["goToHomepage"] =
              localStorage.getItem("userbabarcat") != null &&
              sessionStorage.getItem("userbabarcatToken") != null
                ? (() => {
                    const actionArgs = { destination: `/` };
                    return (({ destination }) => {
                      if (
                        typeof destination === "string" &&
                        destination.startsWith("#")
                      ) {
                        document
                          .getElementById(destination.substr(1))
                          .scrollIntoView({ behavior: "smooth" });
                      } else {
                        __nextRouter?.push(destination);
                      }
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
            if (
              $steps["goToHomepage"] != null &&
              typeof $steps["goToHomepage"] === "object" &&
              typeof $steps["goToHomepage"].then === "function"
            ) {
              $steps["goToHomepage"] = await $steps["goToHomepage"];
            }

            $steps["updateGroup11"] =
              localStorage.getItem("userbabarcat") != null &&
              sessionStorage.getItem("userbabarcatToken") == null &&
              localStorage.getItem("userBabarkatPass") != null
                ? (() => {
                    const actionArgs = {
                      vgroup: "group11",
                      operation: 0,
                      value: "password"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
            if (
              $steps["updateGroup11"] != null &&
              typeof $steps["updateGroup11"] === "object" &&
              typeof $steps["updateGroup11"].then === "function"
            ) {
              $steps["updateGroup11"] = await $steps["updateGroup11"];
            }
          }}
        />

        <AntdModal
          data-plasmic-name={"modal"}
          data-plasmic-override={overrides.modal}
          className={classNames("__wab_instance", sty.modal)}
          closeButtonClassName={classNames({
            [sty["pcls_raBBc3-tJ2--"]]: true
          })}
          closeIcon={
            <svg
              className={classNames(projectcss.all, sty.svg__aE7K)}
              role={"img"}
            />
          }
          defaultStylesClassName={classNames(
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens
          )}
          hideFooter={true}
          maskClosable={false}
          modalContentClassName={classNames({
            [sty["pcls_IFqcsvhAINzF"]]: true
          })}
          modalScopeClassName={sty["modal__modal"]}
          onOpenChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["modal", "open"]).apply(
              null,
              eventArgs
            );
          }}
          open={generateStateValueProp($state, ["modal", "open"])}
          title={null}
          trigger={null}
          width={"100vw"}
          wrapClassName={classNames({ [sty["pcls_K1Qr6aZkpClP"]]: true })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__nTlnN)}>
            <Icon82Icon
              className={classNames(projectcss.all, sty.svg__qDphw)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tmXpz
              )}
            >
              {
                "\u062f\u0631 \u062d\u0627\u0644 \u0628\u0631\u0648\u0632 \u0631\u0633\u0627\u0646\u06cc..."
              }
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qa4Vm
              )}
            >
              {
                "\u0628\u0647 \u0632\u0648\u062f\u06cc \u0642\u0627\u0628\u0644 \u062f\u0633\u062a\u0631\u0633 \u0645\u06cc \u0628\u0627\u0634\u062f."
              }
            </div>
          </div>
        </AntdModal>
        <Shop
          data-plasmic-name={"shop"}
          data-plasmic-override={overrides.shop}
          body={
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___2An9Q,
                {
                  [sty.textgroup11_saraf___2An9QnaBfa]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  )
                }
              )}
            >
              {hasVariant($state, "group11", "saraf")
                ? " \u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u0633\u06cc\u0627\u0633\u062a \u062d\u0641\u0638 \u062d\u0631\u06cc\u0645 \u062e\u0635\u0648\u0635\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0628\u0627\u0628\u0631\u06a9\u062a\r\n1. \u0628\u0627\u0628\u0631\u06a9\u062a \u0686\u06cc\u0633\u062a\u061f\r\n\u0628\u0627\u0628\u0631\u06a9\u062a \u06cc\u06a9 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0627\u0633\u062a \u06a9\u0647 \u0628\u0647 \u0634\u0645\u0627 \u06a9\u0645\u06a9 \u0645\u06cc\u200c\u06a9\u0646\u062f \u0645\u0648\u062c\u0648\u062f\u06cc \u0648 \u06af\u0631\u062f\u0634 \u062d\u0633\u0627\u0628\u200c\u062a\u0627\u0646 \u0646\u0632\u062f \u0635\u0631\u0627\u0641 \u06cc\u0627 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631\u06cc \u06a9\u0647 \u0628\u0627 \u0627\u0648 \u06a9\u0627\u0631 \u0645\u06cc\u200c\u06a9\u0646\u06cc\u062f \u0631\u0627 \u0628\u0628\u06cc\u0646\u06cc\u062f\u060c \u0648 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0628\u0627 \u0647\u0645\u0627\u0646 \u0645\u0648\u062c\u0648\u062f\u06cc \u062e\u062f\u0645\u0627\u062a\u06cc \u0645\u0627\u0646\u0646\u062f \u062e\u0631\u06cc\u062f \u0634\u0627\u0631\u0698\u060c \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u060c \u0648 \u062f\u06cc\u06af\u0631 \u067e\u0631\u062f\u0627\u062e\u062a\u200c\u0647\u0627\u06cc \u06a9\u0648\u0686\u06a9 \u0631\u0627 \u0627\u0646\u062c\u0627\u0645 \u062f\u0647\u06cc\u062f.\r\n2. \u067e\u0648\u0644 \u0645\u0646 \u06a9\u062c\u0627\u0633\u062a\u061f\r\n\u0645\u0648\u062c\u0648\u062f\u06cc\u200c\u0627\u06cc \u06a9\u0647 \u0634\u0645\u0627 \u062f\u0631 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0628\u0627\u0628\u0631\u06a9\u062a \u0645\u06cc\u200c\u0628\u06cc\u0646\u06cc\u062f\u060c \u062f\u0631 \u062d\u0633\u0627\u0628 \u0628\u0627\u0628\u0631\u06a9\u062a \u0646\u06cc\u0633\u062a. \u0627\u06cc\u0646 \u0645\u0628\u0644\u063a \u0646\u0632\u062f \u0647\u0645\u0627\u0646 \u0635\u0631\u0627\u0641 \u06cc\u0627 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631\u06cc \u0627\u0633\u062a \u06a9\u0647 \u0628\u0627 \u0627\u0648 \u06a9\u0627\u0631 \u0645\u06cc\u200c\u06a9\u0646\u06cc\u062f. \u0628\u0627\u0628\u0631\u06a9\u062a \u0641\u0642\u0637 \u0627\u0628\u0632\u0627\u0631 \u062d\u0633\u0627\u0628\u062f\u0627\u0631\u06cc \u0648 \u0646\u0645\u0627\u06cc\u0634 \u0645\u0648\u062c\u0648\u062f\u06cc \u0627\u0633\u062a.\r\n3. \u0628\u0627\u0628\u0631\u06a9\u062a \u062f\u0631 \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627 \u0686\u0637\u0648\u0631 \u0639\u0645\u0644 \u0645\u06cc\u200c\u06a9\u0646\u062f\u061f\r\n\u0632\u0645\u0627\u0646\u06cc \u06a9\u0647 \u0634\u0645\u0627 \u0627\u0632 \u062f\u0627\u062e\u0644 \u0627\u067e \u0628\u0627\u0628\u0631\u06a9\u062a \u0634\u0627\u0631\u0698 \u06cc\u0627 \u0628\u0633\u062a\u0647 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc \u0645\u06cc\u200c\u062e\u0631\u06cc\u062f\u060c \u0645\u0628\u0644\u063a \u0622\u0646 \u0628\u0647\u200c\u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0627\u0632 \u0645\u0648\u062c\u0648\u062f\u06cc \u0634\u0645\u0627 \u0646\u0632\u062f \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631 \u06a9\u0645 \u0645\u06cc\u200c\u0634\u0648\u062f.\r\n\u0628\u0627\u0628\u0631\u06a9\u062a \u0628\u0639\u062f \u0627\u0632 \u0622\u0646\u060c \u0627\u0632 \u0637\u0631\u0641 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631 \u0634\u0627\u0631\u0698 \u0631\u0627 \u0628\u0631\u0627\u06cc \u0634\u0645\u0627 \u0645\u06cc\u200c\u062e\u0631\u062f \u0648 \u062a\u062d\u0648\u06cc\u0644\u200c\u062a\u0627\u0646 \u0645\u06cc\u200c\u062f\u0647\u062f.\r\n\u0627\u06af\u0631 \u0648\u0627\u0631\u06cc\u0632 \u06cc\u0627 \u0628\u0631\u062f\u0627\u0634\u062a \u067e\u0648\u0644\u06cc \u062f\u0627\u0631\u06cc\u062f (\u0645\u062b\u0644\u0627\u064b \u067e\u0648\u0644 \u062f\u0633\u062a\u06cc \u0628\u0647 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631 \u062f\u0627\u062f\u0647\u200c\u0627\u06cc\u062f)\u060c \u0627\u06cc\u0646 \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627 \u0631\u0627 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631 \u062f\u0631 \u067e\u0646\u0644 \u062b\u0628\u062a \u0645\u06cc\u200c\u06a9\u0646\u062f \u0648 \u0634\u0645\u0627 \u062f\u0631 \u0627\u067e \u0645\u06cc\u200c\u0628\u06cc\u0646\u06cc\u062f.\r\n4. \u0627\u06af\u0631 \u0645\u0634\u06a9\u0644\u06cc \u067e\u06cc\u0634 \u0622\u0645\u062f \u0686\u0647 \u06a9\u0633\u06cc \u0645\u0633\u0626\u0648\u0644 \u0627\u0633\u062a\u061f\r\n\u0627\u06af\u0631 \u0645\u0634\u06a9\u0644\u06cc \u062f\u0631 \u062e\u0631\u06cc\u062f \u0634\u0627\u0631\u0698 \u06cc\u0627 \u062e\u062f\u0645\u0627\u062a \u062f\u06cc\u06af\u0631 \u062f\u0627\u0634\u062a\u06cc\u062f\u060c \u0628\u0627\u0628\u0631\u06a9\u062a \u062a\u0644\u0627\u0634 \u0645\u06cc\u200c\u06a9\u0646\u062f \u0622\u0646 \u0631\u0627 \u0628\u0627 \u0633\u0631\u0648\u06cc\u0633\u200c\u062f\u0647\u0646\u062f\u0647 (\u0645\u062b\u0644 \u0627\u06cc\u0631\u0627\u0646\u0633\u0644 \u06cc\u0627 \u0627\u062a\u0635\u0627\u0644\u0627\u062a) \u067e\u06cc\u06af\u06cc\u0631\u06cc \u06a9\u0646\u062f.\r\n\u0627\u0645\u0627 \u0627\u06af\u0631 \u0645\u0634\u06a9\u0644 \u06cc\u0627 \u0627\u062e\u062a\u0644\u0627\u0641\u06cc \u062f\u0631 \u0645\u0648\u062c\u0648\u062f\u06cc \u06cc\u0627 \u067e\u0648\u0644 \u0634\u0645\u0627 \u0648\u062c\u0648\u062f \u062f\u0627\u0631\u062f\u060c \u0628\u0627\u06cc\u062f \u0628\u0627 \u0647\u0645\u0627\u0646 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631\u06cc \u06a9\u0647 \u0628\u0627 \u0627\u0648 \u06a9\u0627\u0631 \u0645\u06cc\u200c\u06a9\u0646\u06cc\u062f \u0635\u062d\u0628\u062a \u06a9\u0646\u06cc\u062f.\r\n\u0628\u0627\u0628\u0631\u06a9\u062a \u062f\u0631 \u0645\u0633\u0627\u0626\u0644 \u0645\u0627\u0644\u06cc \u0628\u06cc\u0646 \u0634\u0645\u0627 \u0648 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631 \u062f\u062e\u0627\u0644\u062a\u06cc \u0646\u062f\u0627\u0631\u062f.\r\n5. \u0627\u0645\u0646\u06cc\u062a \u0648 \u0634\u0641\u0627\u0641\u06cc\u062a\r\n\u0634\u0645\u0627 \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u062f\u0631 \u0647\u0631 \u0644\u062d\u0638\u0647 \u06af\u0631\u062f\u0634 \u062d\u0633\u0627\u0628 \u0648 \u062e\u0631\u06cc\u062f\u0647\u0627\u06cc \u062e\u0648\u062f \u0631\u0627 \u0628\u0628\u06cc\u0646\u06cc\u062f.\r\n\u0628\u0631\u0627\u06cc \u062d\u0641\u0638 \u0627\u0645\u0646\u06cc\u062a\u060c \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062d\u0633\u0627\u0628\u200c\u062a\u0627\u0646 \u0631\u0627 \u062f\u0631 \u0627\u062e\u062a\u06cc\u0627\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u0646\u06af\u0630\u0627\u0631\u06cc\u062f.\r\n6. \u0633\u06cc\u0627\u0633\u062a \u062d\u0641\u0638 \u062d\u0631\u06cc\u0645 \u062e\u0635\u0648\u0635\u06cc (Privacy Policy)\r\n\u0686\u0647 \u0627\u0637\u0644\u0627\u0639\u0627\u062a\u06cc \u0627\u0632 \u0634\u0645\u0627 \u062c\u0645\u0639\u200c\u0622\u0648\u0631\u06cc \u0645\u06cc\u200c\u0634\u0648\u062f\u061f\r\n\u0628\u0631\u0627\u06cc \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u0627\u062a\u060c \u0628\u0627\u0628\u0631\u06a9\u062a \u0645\u0645\u06a9\u0646 \u0627\u0633\u062a \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0632\u06cc\u0631 \u0631\u0627 \u062c\u0645\u0639\u200c\u0622\u0648\u0631\u06cc \u06cc\u0627 \u0646\u0645\u0627\u06cc\u0634 \u062f\u0647\u062f:\r\n\u0634\u0645\u0627\u0631\u0647 \u0645\u0648\u0628\u0627\u06cc\u0644 \u0634\u0645\u0627 (\u0628\u0631\u0627\u06cc \u0648\u0631\u0648\u062f \u0648 \u062a\u0623\u06cc\u06cc\u062f \u0647\u0648\u06cc\u062a)\r\n\u0646\u0627\u0645 \u0648 \u0646\u0627\u0645 \u062e\u0627\u0646\u0648\u0627\u062f\u06af\u06cc (\u062f\u0631 \u0635\u0648\u0631\u062a \u062b\u0628\u062a \u062a\u0648\u0633\u0637 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631)\r\n\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062a\u0631\u0627\u06a9\u0646\u0634\u200c\u0647\u0627 \u0648 \u0645\u0648\u062c\u0648\u062f\u06cc \u0634\u0645\u0627 \u0646\u0632\u062f \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631\r\n\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062f\u0633\u062a\u06af\u0627\u0647 (\u0645\u062b\u0644 \u0645\u062f\u0644 \u06af\u0648\u0634\u06cc\u060c \u0633\u06cc\u0633\u062a\u0645\u200c\u0639\u0627\u0645\u0644\u060c \u0628\u0631\u0627\u06cc \u0628\u0647\u0628\u0648\u062f \u0639\u0645\u0644\u06a9\u0631\u062f)\r\n\u0627\u06cc\u0646 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u0631\u0627\u06cc \u0686\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f\u061f\r\n\u0646\u0645\u0627\u06cc\u0634 \u0648\u0636\u0639\u06cc\u062a \u0645\u0627\u0644\u06cc \u0634\u0645\u0627 \u0646\u0632\u062f \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631\r\n\u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645\u06a9\u200c\u0647\u0627\u06cc \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0648 \u0627\u0645\u0646\u06cc\u062a\u06cc\r\n\u062b\u0628\u062a \u0648 \u0627\u0646\u062c\u0627\u0645 \u062e\u062f\u0645\u0627\u062a\u06cc \u0645\u0627\u0646\u0646\u062f \u062e\u0631\u06cc\u062f \u0634\u0627\u0631\u0698 \u0648 \u0628\u0633\u062a\u0647 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\r\n\u062a\u062d\u0644\u06cc\u0644 \u0641\u0646\u06cc \u0628\u0631\u0627\u06cc \u0628\u0647\u0628\u0648\u062f \u0639\u0645\u0644\u06a9\u0631\u062f \u0648 \u0627\u0645\u0646\u06cc\u062a \u0628\u0631\u0646\u0627\u0645\u0647\r\n\u0622\u06cc\u0627 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0634\u0645\u0627 \u0628\u0647 \u06a9\u0633\u06cc \u062f\u0627\u062f\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f\u061f\r\n\u062e\u06cc\u0631. \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0634\u0645\u0627 \u0641\u0642\u0637 \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u062e\u062f\u0645\u0627\u062a \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0627\u0633\u062a \u0648:\r\n\u0628\u0647 \u0647\u06cc\u0686 \u0641\u0631\u062f \u06cc\u0627 \u0634\u0631\u06a9\u062a \u0633\u0648\u0645\u06cc \u0641\u0631\u0648\u062e\u062a\u0647 \u06cc\u0627 \u0645\u0646\u062a\u0642\u0644 \u0646\u0645\u06cc\u200c\u0634\u0648\u062f\u061b\r\n\u0641\u0642\u0637 \u062a\u0648\u0633\u0637 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631\u06cc \u06a9\u0647 \u0634\u0645\u0627 \u0631\u0627 \u062b\u0628\u062a \u06a9\u0631\u062f\u0647 \u0642\u0627\u0628\u0644 \u0645\u0634\u0627\u0647\u062f\u0647 \u0627\u0633\u062a.\r\n\u0627\u0645\u0646\u06cc\u062a \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0634\u0645\u0627\r\n\u0628\u0627\u0628\u0631\u06a9\u062a \u0627\u0632 \u0632\u06cc\u0631\u0633\u0627\u062e\u062a\u200c\u0647\u0627\u06cc \u0627\u0645\u0646 \u0648 \u0631\u0648\u0634\u200c\u0647\u0627\u06cc \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u0628\u0631\u0627\u06cc \u0645\u062d\u0627\u0641\u0638\u062a \u0627\u0632 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0634\u0645\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0645\u06cc\u200c\u06a9\u0646\u062f. \u0647\u0645\u0686\u0646\u06cc\u0646 \u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0645\u062d\u062f\u0648\u062f \u0648 \u06a9\u0646\u062a\u0631\u0644\u200c\u0634\u062f\u0647 \u0627\u0633\u062a.\r\n\u062d\u0630\u0641 \u0627\u0637\u0644\u0627\u0639\u0627\u062a\r\n\u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u0627\u06cc\u0644 \u0628\u0627\u0634\u06cc\u062f \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0634\u0645\u0627 \u0627\u0632 \u0633\u06cc\u0633\u062a\u0645 \u062d\u0630\u0641 \u0634\u0648\u062f\u060c \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 \u0637\u0631\u06cc\u0642 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0628\u0627\u0628\u0631\u06a9\u062a \u06cc\u0627 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631 \u0627\u0642\u062f\u0627\u0645 \u06a9\u0646\u06cc\u062f.\r\n7. \u062a\u0623\u06cc\u06cc\u062f \u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u062d\u0631\u06cc\u0645 \u062e\u0635\u0648\u0635\u06cc\r\n\u0628\u0627 \u0646\u0635\u0628 \u0648 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0628\u0627\u0628\u0631\u06a9\u062a\u060c \u0634\u0645\u0627 \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0631\u0627 \u0645\u06cc\u200c\u067e\u0630\u06cc\u0631\u06cc\u062f:\r\n\u067e\u0648\u0644\u200c\u062a\u0627\u0646 \u0646\u0632\u062f \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631 \u0627\u0633\u062a\u060c \u0646\u0647 \u0646\u0632\u062f \u0628\u0627\u0628\u0631\u06a9\u062a\u061b\r\n\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0634\u0645\u0627 \u0641\u0642\u0637 \u0628\u0631\u0627\u06cc \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u0627\u062a \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f \u0648 \u0645\u062d\u0631\u0645\u0627\u0646\u0647 \u0628\u0627\u0642\u06cc \u0645\u06cc\u200c\u0645\u0627\u0646\u062f\u061b\r\n\u0645\u0633\u0626\u0648\u0644\u06cc\u062a \u0627\u062e\u062a\u0644\u0627\u0641\u0627\u062a \u0645\u0627\u0644\u06cc \u0628\u0627 \u0627\u0645\u0627\u0646\u062a\u200c\u062f\u0627\u0631 \u0627\u0633\u062a\u060c \u0646\u0647 \u0628\u0627 \u0628\u0627\u0628\u0631\u06a9\u062a."
                : "You can insert body content here in this slot."}
            </div>
          }
          className={classNames("__wab_instance", sty.shop, {
            [sty.shopgroup11_saraf]: hasVariant($state, "group11", "saraf")
          })}
          fullScreen={hasVariant($state, "group11", "saraf") ? true : undefined}
          onOpenChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["shop", "open"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          open={generateStateValueProp($state, ["shop", "open"])}
          title={
            <div
              className={classNames(projectcss.all, sty.freeBox__znSkq, {
                [sty.freeBoxgroup11_saraf__znSkqnaBfa]: hasVariant(
                  $state,
                  "group11",
                  "saraf"
                )
              })}
            >
              <Icon10Icon
                className={classNames(projectcss.all, sty.svg___09Ie, {
                  [sty.svggroup11_saraf___09IenaBfa]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["updateShopOpen"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["shop", "open"]
                          },
                          operation: 4
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          const oldValue = $stateGet(objRoot, variablePath);
                          $stateSet(objRoot, variablePath, !oldValue);
                          return !oldValue;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateShopOpen"] != null &&
                    typeof $steps["updateShopOpen"] === "object" &&
                    typeof $steps["updateShopOpen"].then === "function"
                  ) {
                    $steps["updateShopOpen"] = await $steps["updateShopOpen"];
                  }
                }}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__b3UKh,
                  {
                    [sty.textgroup11_saraf__b3UKhnaBfa]: hasVariant(
                      $state,
                      "group11",
                      "saraf"
                    )
                  }
                )}
              >
                {hasVariant($state, "group11", "saraf")
                  ? "\u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u0645\u0642\u0631\u0631\u0627\u062a"
                  : "Title"}
              </div>
            </div>
          }
        />

        <div
          className={classNames(projectcss.all, sty.freeBox___9AlIg, {
            [sty.freeBoxgroup11_noSaraf___9AlIgHtLqd]: hasVariant(
              $state,
              "group11",
              "noSaraf"
            )
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__xxdY, {
              [sty.freeBoxgroup11_code__xxdYYss9U]: hasVariant(
                $state,
                "group11",
                "code"
              ),
              [sty.freeBoxgroup11_noSaraf__xxdYHtLqd]: hasVariant(
                $state,
                "group11",
                "noSaraf"
              )
            })}
          >
            <PlasmicIcon__
              PlasmicIconType={
                hasVariant($state, "group11", "password")
                  ? Icon154Icon
                  : hasVariant($state, "password", "password")
                  ? Icon154Icon
                  : Icon154Icon
              }
              className={classNames(projectcss.all, sty.svg___9Hesj, ``, {
                [sty.svgcode2___9HesjDv9B5]: hasVariant(
                  $state,
                  "code2",
                  "code2"
                ),
                [sty.svgcode2_group11_code___9HesjDv9B5Yss9U]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "code"),
                [sty.svgcode2_group11_saraf___9HesjDv9B5NaBfa]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "saraf"),
                [sty.svgcode2_saraf2___9HesjDv9B5JmKha]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.svgcode2_saraf2_group11_password___9HesjDv9B5JmKhaCxClj]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "group11", "password"),
                [sty.svggroup11_code___9HesjYss9U]: hasVariant(
                  $state,
                  "group11",
                  "code"
                ),
                [sty.svggroup11_loginByPassword___9Hesje5Wtv]: hasVariant(
                  $state,
                  "group11",
                  "loginByPassword"
                ),
                [sty.svggroup11_noSaraf___9HesjHtLqd]: hasVariant(
                  $state,
                  "group11",
                  "noSaraf"
                ),
                [sty.svggroup11_password___9HesjcxClj]: hasVariant(
                  $state,
                  "group11",
                  "password"
                ),
                [sty.svggroup11_saraf___9HesjnaBfa]: hasVariant(
                  $state,
                  "group11",
                  "saraf"
                ),
                [sty.svgloginByPassword___9Hesj0DikB]: hasVariant(
                  $state,
                  "loginByPassword",
                  "loginByPassword"
                ),
                [sty.svgloginByPassword_code2_group11_saraf___9Hesj0DikBDv9B5NaBfa]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "saraf") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.svgloginByPassword_code2_saraf2_group11_password___9Hesj0DikBDv9B5JmKhaCxClj]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "group11", "password") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.svgloginByPassword_group11_code___9Hesj0DikBYss9U]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.svgloginByPassword_group11_password___9Hesj0DikBCxClj]:
                  hasVariant($state, "loginByPassword", "loginByPassword") &&
                  hasVariant($state, "group11", "password"),
                [sty.svgloginByPassword_password___9Hesj0DikB8PqF9]:
                  hasVariant($state, "loginByPassword", "loginByPassword") &&
                  hasVariant($state, "password", "password"),
                [sty.svgloginByPassword_password_code2_group11_saraf___9Hesj0DikB8PqF9Dv9B5NaBfa]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "saraf") &&
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.svgloginByPassword_password_code2_saraf2___9Hesj0DikB8PqF9Dv9B5JmKha]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.svgloginByPassword_password_group11_code___9Hesj0DikB8PqF9Yss9U]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.svgloginByPassword_password_group11_saraf___9Hesj0DikB8PqF9NaBfa]:
                  hasVariant($state, "loginByPassword", "loginByPassword") &&
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "group11", "saraf"),
                [sty.svgloginByPassword_password_saraf2___9Hesj0DikB8PqF9JmKha]:
                  hasVariant($state, "loginByPassword", "loginByPassword") &&
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.svgloginByPassword_password_saraf2_group11_code___9Hesj0DikB8PqF9JmKhaYss9U]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.svgloginByPassword_saraf2_group11_code___9Hesj0DikBJmKhaYss9U]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "loginByPassword", "loginByPassword"),
                [sty.svgloginByPassword_saraf2_group11_password___9Hesj0DikBJmKhaCxClj]:
                  hasVariant($state, "loginByPassword", "loginByPassword") &&
                  hasVariant($state, "group11", "password") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.svgpassword___9Hesj8PqF9]: hasVariant(
                  $state,
                  "password",
                  "password"
                ),
                [sty.svgpassword_code2_group11_saraf___9Hesj8PqF9Dv9B5NaBfa]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "group11", "saraf") &&
                  hasVariant($state, "password", "password"),
                [sty.svgpassword_code2_saraf2___9Hesj8PqF9Dv9B5JmKha]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "password", "password"),
                [sty.svgpassword_code2_saraf2_group11_loginByPassword___9Hesj8PqF9Dv9B5JmKhaE5Wtv]:
                  hasVariant($state, "code2", "code2") &&
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "group11", "loginByPassword"),
                [sty.svgpassword_group11_code___9Hesj8PqF9Yss9U]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "password", "password"),
                [sty.svgpassword_group11_loginByPassword___9Hesj8PqF9E5Wtv]:
                  hasVariant($state, "group11", "loginByPassword") &&
                  hasVariant($state, "password", "password"),
                [sty.svgpassword_group11_saraf___9Hesj8PqF9NaBfa]:
                  hasVariant($state, "group11", "saraf") &&
                  hasVariant($state, "password", "password"),
                [sty.svgpassword_saraf2___9Hesj8PqF9JmKha]:
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "password", "password"),
                [sty.svgpassword_saraf2_group11_code___9Hesj8PqF9JmKhaYss9U]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "password", "password"),
                [sty.svgpassword_saraf2_group11_loginByPassword___9Hesj8PqF9JmKhaE5Wtv]:
                  hasVariant($state, "group11", "loginByPassword") &&
                  hasVariant($state, "password", "password") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.svgsaraf2___9HesjJmKha]: hasVariant(
                  $state,
                  "saraf2",
                  "saraf2"
                ),
                [sty.svgsaraf2_group11_code___9HesjJmKhaYss9U]:
                  hasVariant($state, "group11", "code") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.svgsaraf2_group11_loginByPassword___9HesjJmKhaE5Wtv]:
                  hasVariant($state, "group11", "loginByPassword") &&
                  hasVariant($state, "saraf2", "saraf2"),
                [sty.svgsaraf2_group11_password___9HesjJmKhaCxClj]:
                  hasVariant($state, "saraf2", "saraf2") &&
                  hasVariant($state, "group11", "password")
              })}
              id={"logoLogin"}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__x84UA,
                {
                  [sty.textcode2__x84UADv9B5]: hasVariant(
                    $state,
                    "code2",
                    "code2"
                  ),
                  [sty.textcode2_group11_loginByPassword__x84UADv9B5E5Wtv]:
                    hasVariant($state, "group11", "loginByPassword") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.textgroup11_code__x84UAYss9U]: hasVariant(
                    $state,
                    "group11",
                    "code"
                  ),
                  [sty.textgroup11_loginByPassword__x84UAe5Wtv]: hasVariant(
                    $state,
                    "group11",
                    "loginByPassword"
                  ),
                  [sty.textgroup11_noSaraf__x84UAHtLqd]: hasVariant(
                    $state,
                    "group11",
                    "noSaraf"
                  ),
                  [sty.textgroup11_password__x84UAcxClj]: hasVariant(
                    $state,
                    "group11",
                    "password"
                  ),
                  [sty.textgroup11_saraf__x84UAnaBfa]: hasVariant(
                    $state,
                    "group11",
                    "saraf"
                  ),
                  [sty.textloginByPassword__x84UA0DikB]: hasVariant(
                    $state,
                    "loginByPassword",
                    "loginByPassword"
                  ),
                  [sty.textloginByPassword_code2__x84UA0DikBDv9B5]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "code2", "code2"),
                  [sty.textloginByPassword_group11_code__x84UA0DikBYss9U]:
                    hasVariant($state, "loginByPassword", "loginByPassword") &&
                    hasVariant($state, "group11", "code"),
                  [sty.textpassword__x84UA8PqF9]: hasVariant(
                    $state,
                    "password",
                    "password"
                  ),
                  [sty.textsaraf2__x84UAJmKha]: hasVariant(
                    $state,
                    "saraf2",
                    "saraf2"
                  )
                }
              )}
            >
              {hasVariant($state, "group11", "password")
                ? "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631"
                : hasVariant($state, "group11", "saraf")
                ? "\u0627\u0646\u062a\u062e\u0627\u0628 \u0627\u0645\u0627\u0646\u062a\u062f\u0627\u0631\u06cc"
                : hasVariant($state, "group11", "code")
                ? "\u06a9\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                : hasVariant($state, "loginByPassword", "loginByPassword")
                ? "\u0634\u0645\u0627\u0631\u0647 \u0647\u0645\u0631\u0627\u0647"
                : hasVariant($state, "password", "password")
                ? "\u0631\u0645\u0632 \u0639\u0628\u0648\u0631"
                : hasVariant($state, "saraf2", "saraf2")
                ? "\u0627\u0646\u062a\u062e\u0627\u0628 \u0627\u0645\u0627\u0646\u062a\u062f\u0627\u0631\u06cc"
                : hasVariant($state, "code2", "code2")
                ? "\u06a9\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f"
                : "\u062b\u0628\u062a \u0646\u0627\u0645 \u062f\u0631 \u0628\u0627\u0628\u0631\u06a9\u062a"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___6Xi6Z,
                {
                  [sty.textgroup11_noSaraf___6Xi6ZHtLqd]: hasVariant(
                    $state,
                    "group11",
                    "noSaraf"
                  )
                }
              )}
            >
              {
                "\u06cc\u06a9\u06cc \u0627\u0632 \u062f\u0648 \u062d\u0627\u0644\u062a \u0632\u06cc\u0631 \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u0645\u0633\u06cc\u0631 \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u0645\u062a\u0646\u0627\u0633\u0628 \u0628\u0627\u0632 \u0634\u0648\u062f.\r\n\r\n"
              }
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "reveal",
    "button",
    "fragmentInput",
    "select2",
    "fragmentInput3",
    "fragmentInput2",
    "timer",
    "select",
    "btnNumber",
    "button2",
    "button3",
    "checkbox",
    "btnSaraf",
    "sendcode",
    "figmaPaste",
    "group",
    "group2",
    "rectangle35",
    "group3",
    "group4",
    "rectangle23",
    "group5",
    "rectangle24",
    "group6",
    "rectangle25",
    "group7",
    "rectangle",
    "group8",
    "group9",
    "group10",
    "embedHtml",
    "sideEffect",
    "modal",
    "shop"
  ],
  reveal: [
    "reveal",
    "button",
    "fragmentInput",
    "select2",
    "fragmentInput3",
    "fragmentInput2",
    "timer",
    "select",
    "btnNumber",
    "button2",
    "button3",
    "checkbox",
    "btnSaraf",
    "sendcode",
    "figmaPaste",
    "group",
    "group2",
    "rectangle35",
    "group3",
    "group4",
    "rectangle23",
    "group5",
    "rectangle24",
    "group6",
    "rectangle25",
    "group7",
    "rectangle",
    "group8",
    "group9",
    "group10"
  ],
  button: ["button"],
  fragmentInput: ["fragmentInput"],
  select2: ["select2"],
  fragmentInput3: ["fragmentInput3"],
  fragmentInput2: ["fragmentInput2"],
  timer: ["timer"],
  select: ["select"],
  btnNumber: ["btnNumber"],
  button2: ["button2"],
  button3: ["button3"],
  checkbox: ["checkbox"],
  btnSaraf: ["btnSaraf"],
  sendcode: ["sendcode"],
  figmaPaste: [
    "figmaPaste",
    "group",
    "group2",
    "rectangle35",
    "group3",
    "group4",
    "rectangle23",
    "group5",
    "rectangle24",
    "group6",
    "rectangle25",
    "group7",
    "rectangle",
    "group8"
  ],
  group: [
    "group",
    "group2",
    "rectangle35",
    "group3",
    "group4",
    "rectangle23",
    "group5",
    "rectangle24",
    "group6",
    "rectangle25",
    "group7",
    "rectangle"
  ],
  group2: ["group2", "rectangle35"],
  rectangle35: ["rectangle35"],
  group3: [
    "group3",
    "group4",
    "rectangle23",
    "group5",
    "rectangle24",
    "group6",
    "rectangle25",
    "group7",
    "rectangle"
  ],
  group4: ["group4", "rectangle23"],
  rectangle23: ["rectangle23"],
  group5: ["group5", "rectangle24"],
  rectangle24: ["rectangle24"],
  group6: ["group6", "rectangle25"],
  rectangle25: ["rectangle25"],
  group7: ["group7", "rectangle"],
  rectangle: ["rectangle"],
  group8: ["group8"],
  group9: ["group9"],
  group10: ["group10"],
  embedHtml: ["embedHtml"],
  sideEffect: ["sideEffect"],
  modal: ["modal"],
  shop: ["shop"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  reveal: typeof Reveal;
  button: typeof Button;
  fragmentInput: typeof Input;
  select2: typeof AntdSelect;
  fragmentInput3: typeof Input;
  fragmentInput2: typeof Input;
  timer: typeof Timer;
  select: typeof AntdSelect;
  btnNumber: typeof Button;
  button2: typeof Button;
  button3: typeof Button;
  checkbox: typeof AntdCheckbox;
  btnSaraf: typeof Button;
  sendcode: typeof Button;
  figmaPaste: "div";
  group: "div";
  group2: "div";
  rectangle35: "div";
  group3: "div";
  group4: "div";
  rectangle23: "div";
  group5: "div";
  rectangle24: "div";
  group6: "div";
  rectangle25: "div";
  group7: "div";
  rectangle: "div";
  group8: "div";
  group9: "div";
  group10: "div";
  embedHtml: typeof Embed;
  sideEffect: typeof SideEffect;
  modal: typeof AntdModal;
  shop: typeof Shop;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLogIn__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLogIn__VariantsArgs;
    args?: PlasmicLogIn__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLogIn__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLogIn__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLogIn__ArgProps,
          internalVariantPropNames: PlasmicLogIn__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLogIn__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLogIn";
  } else {
    func.displayName = `PlasmicLogIn.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "sZQMbqXz9utLNaTnNb3uss"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicLogIn = Object.assign(
  // Top-level PlasmicLogIn renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    reveal: makeNodeComponent("reveal"),
    button: makeNodeComponent("button"),
    fragmentInput: makeNodeComponent("fragmentInput"),
    select2: makeNodeComponent("select2"),
    fragmentInput3: makeNodeComponent("fragmentInput3"),
    fragmentInput2: makeNodeComponent("fragmentInput2"),
    timer: makeNodeComponent("timer"),
    select: makeNodeComponent("select"),
    btnNumber: makeNodeComponent("btnNumber"),
    button2: makeNodeComponent("button2"),
    button3: makeNodeComponent("button3"),
    checkbox: makeNodeComponent("checkbox"),
    btnSaraf: makeNodeComponent("btnSaraf"),
    sendcode: makeNodeComponent("sendcode"),
    figmaPaste: makeNodeComponent("figmaPaste"),
    group: makeNodeComponent("group"),
    group2: makeNodeComponent("group2"),
    rectangle35: makeNodeComponent("rectangle35"),
    group3: makeNodeComponent("group3"),
    group4: makeNodeComponent("group4"),
    rectangle23: makeNodeComponent("rectangle23"),
    group5: makeNodeComponent("group5"),
    rectangle24: makeNodeComponent("rectangle24"),
    group6: makeNodeComponent("group6"),
    rectangle25: makeNodeComponent("rectangle25"),
    group7: makeNodeComponent("group7"),
    rectangle: makeNodeComponent("rectangle"),
    group8: makeNodeComponent("group8"),
    group9: makeNodeComponent("group9"),
    group10: makeNodeComponent("group10"),
    embedHtml: makeNodeComponent("embedHtml"),
    sideEffect: makeNodeComponent("sideEffect"),
    modal: makeNodeComponent("modal"),
    shop: makeNodeComponent("shop"),

    // Metadata about props expected for PlasmicLogIn
    internalVariantProps: PlasmicLogIn__VariantProps,
    internalArgProps: PlasmicLogIn__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "بابرکت",
      description: "",
      ogImageSrc:
        "https://site-assets.plasmic.app/cdcc22ba73cb1607cdeb736202b178e2.png",
      canonical: ""
    }
  }
);

export default PlasmicLogIn;
/* prettier-ignore-end */
